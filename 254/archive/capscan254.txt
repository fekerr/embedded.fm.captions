This is a refresh and extend review of python.
Keeping everything extremely simple.
Arguments on command line: 2 :
./capscan.py
../originalCaptions/254_captions.sbv
Attempting very simple open of sys.argv[1]= ../originalCaptions/254_captions.sbv
<open file '../originalCaptions/254_captions.sbv', mode 'r' at 0x7ff569ccb5d0>
3.64 11.66 [Music]

6.16 14.9 hello this is embedded I am Alysia white

11.66 18.109 here with Christopher white when I say

14.9 21.279 graphics do you assume I mean a big game

18.109 24.679 computer what about in embedded systems

21.279 28.089 this week we'll be talking to Gabrielle

24.679 31.64 Jakob Oh about embedded graphics and

28.089 32.239 mqtt home automation have real thanks

31.64 35.78 for joining us

32.239 38.78 hi crease another yeah that's going good

35.78 40.25 I know you have worked at some company

38.78 44.329 we're not going to talk about with my

40.25 46.28 husband but how about you give us an

44.329 49.28 introduction of yourself as though you

46.28 52.64 were meeting us for the first time at a

49.28 55.67 technical conference all right my name

52.64 59.179 is Gabriel or Gabrielle in Spanish I'm

55.67 63.44 an electronics engineer and I typically

59.179 66.41 work remotely with US companies usually

63.44 69.47 in software or firmware development and

66.41 73.58 lately I've been working for graphics

69.47 82.85 and systems engineering I thought he

73.58 84.26 would go on for longer I well let's do

82.85 87.08 lightning round and we will dig into

84.26 89.18 more because despite your short

87.08 92.33 introduction you have done many

89.18 94.16 interesting things so lightning round we

92.33 97.1 asked you short questions we want short

94.16 99.26 answers and if we were behaving

97.1 101.81 ourselves we won't ask you why and how

99.26 106.7 and hi and all of that Christopher you

101.81 109.64 ready yeah Gabrielle sure let's go Star

106.7 114.29 Wars or Star Trek Star Wars what's the

109.64 119.34 stuff what's your favorite x window

114.29 126.299 manager wait up

119.34 128.819 or Katie what's the I've been using kve

126.299 131.569 constantly for the last ten years I

128.819 134.9 wouldn't change it for anything

131.569 138.599 dinosaur movies are shark movies

134.9 141.06 dinosaur is the Amazon a river a

138.599 148.76 bookstore or a tribe of work fierce

141.06 152.579 women for me it's a bookstore or online

148.76 154.68 shopping destination see ahead a sales

152.579 156.0 platform in that in that question but

154.68 158.76 you just want a statement it's

156.0 160.41 tightening and I'm a little uncertain

158.76 162.269 about your answer because when I asked

160.41 164.209 you about Amazon earlier in the week you

162.269 167.04 said it was a river

164.209 169.11 yeah because Amazon doesn't really have

167.04 172.799 any presence in South America but

169.11 177.75 anytime I go to the US Amazon is there

172.799 182.01 probably the first site IPC what color

177.75 186.209 should a llama be a second what color

182.01 189.48 should a llama be Oh what color so the

186.209 192.09 thing is llama means flame in Spanish so

189.48 195.81 that's why we're talking about it it'd

192.09 199.739 be enough different colors blue is the

195.81 202.019 color of a good flame so I'd go with

199.739 205.26 that do you like to complete one project

202.019 207.359 or start a dozen I'd like to complete

205.26 211.68 one project what I actually do is start

207.359 217.069 at awesome alright that's going to dive

211.68 219.989 into things graphics when you say

217.069 222.51 graphics and I know you've done a lot of

219.989 225.209 different working graphics what do you

222.51 226.709 what is what does that word really mean

225.209 231.109 when you're talking about embedded

226.709 233.609 systems and graphics so graphics means

231.109 236.4 different things to different people for

233.609 239.16 and users it means what probably what

236.4 242.73 they see on screen for designers it

239.16 246.09 means the way they communicate with

242.73 249.299 users and for us for more engineers it's

246.09 253.08 the whole pipeline that goes from assets

249.299 257.43 to some processing the frame buffer and

253.08 259.23 to the pixels of the display it's a

257.43 262.16 little odd because I would never say

259.23 265.71 I've worked in graphics but I have put

262.16 268.41 bitmaps into flash and then gotten them

265.71 270.42 out and put them on the screen yeah

268.41 273.6 should I be saying oh yeah graphics is

270.42 275.85 on my resume so when you did that did

273.6 278.76 you constantly write to the screen

275.85 280.71 did you worry about doing the minimal

278.76 282.66 amount of work possible to preserve

280.71 287.52 battery for example one of that is I

282.66 289.8 think graphics work in a way yeah I did

287.52 292.53 all that and I I actually drew a graph

289.8 293.64 too so it wasn't just splatting things

292.53 295.83 on the screen I had to worry about

293.64 296.13 pixels yeah I could put that on your

295.83 299.01 resume

296.13 302.6 okay graphics right it's graphics

299.01 305.25 essentially graphics is usually

302.6 310.05 expensive for batteries so for embedded

305.25 312.36 work anything that saves you on drawing

310.05 314.34 time on redrawing things that you don't

312.36 316.71 need to draw even if you're just like

314.34 318.87 moving assets from the flash to the

316.71 321.48 display that's a fairly complicated

318.87 324.54 process and definitely worth putting in

321.48 330.48 your wrist could you go through the

324.54 332.43 process for us so the center of the

330.48 336.27 graphics process is what's called a

332.43 339.84 frame buffer which is a complicated work

336.27 343.32 for an array in memory a buffer where

339.84 345.3 the pixel information is going to be and

343.32 349.56 it's going to be sent to the display

345.3 353.37 through some mechanism the assets

349.56 355.8 typically come from a flash storage SD

353.37 358.08 card depending on the resolution it's

355.8 361.89 the type of storage that we're going to

358.08 365.61 have there's going to be some sort of

361.89 368.04 DMA transfer from the storage to RAM

365.61 370.08 memory or even directly to the frame

368.04 373.11 buffer and then there's going to be some

370.08 375.54 processing than either by the CPU in

373.11 378.57 what's called software rendering or by a

375.54 381.27 GPU in what's typically called hardware

378.57 383.729 accelerated rendering and then that

381.27 386.22 frame buffer is composed into a frame

383.729 387.41 and that gets sent to the display at a

386.22 390.8 certain time

387.41 393.86 the timing of sending images from the

390.8 396.77 frame buffer to the display has a little

393.86 399.71 bit of complexity because the display is

396.77 401.39 doing it something and the CPU is doing

399.71 403.82 its own thing and if you don't

401.39 406.37 coordinate that properly you end up

403.82 408.8 seeing strange artifacts on screen which

406.37 412.1 you don't want and that depends on how

408.8 413.15 much complexity you have in the in the

412.1 415.79 thing you're displaying if you're doing

413.15 417.38 something very static then usually don't

415.79 420.29 worry about that but if you have a lot

417.38 422.18 of animation or changing data or numbers

420.29 424.28 then then you get into the complexity of

422.18 427.46 oh I don't want to update the screen

424.28 428.81 while I'm still updating the data and

427.46 432.56 I'm put that I want to put on it for the

428.81 434.87 next update exactly and that it seems

432.56 437.21 you have a frame buffer on your LCD and

434.87 440.56 the micro isn't asked acting as frame

437.21 445.43 buffer and having to send things every

440.56 447.92 update yeah so this place typically work

445.43 451.1 in one of two configurations the

447.92 453.35 simplest one I afford the display is

451.1 457.1 basically a mode that emulates what all

453.35 460.25 CRTs display did which is you have a see

457.1 463.16 every sync signal and H horizontal sync

460.25 464.66 signal and pixels and you send stuff to

463.16 468.26 the screen and that gets reflected

464.66 472.25 immediately into pixel information and

468.26 474.67 then an evolution of that is this place

472.25 478.34 with graphics ran on them where the

474.67 480.41 microcontroller can send information at

478.34 482.96 a given time and then that gets

480.41 486.23 displayed to pixels after a certain

482.96 488.93 refresh period yes if your data sheet

486.23 492.44 says you have to use H sink in vsync run

488.93 494.39 away run away very quickly oh well I

492.44 498.29 mean you have to often cuz it's cheaper

494.39 501.56 but it is a lot simpler in the code to

498.29 503.54 have something that has onboard RAM but

501.56 505.07 you pay for it in your processor because

503.54 507.35 you know your processor is doing all of

505.07 511.04 that everyone knows that freeware is

507.35 514.219 free so that's why they're typically

511.04 518.63 used to exchange our complexity for free

514.219 520.31 or complexity so that's all how you

518.63 522.89 would deal with like a bear

520.31 524.15 metal system but you worked on this

522.89 527.69 thing what's it called

524.15 529.64 SDL simple directmedia layer which of

527.69 533.99 course I mean it has the word simple in

529.64 538.01 it so it should be simple right that's a

533.99 539.06 it's a nothing but it's it's it's simple

538.01 540.86 for the user

539.06 544.69 it's quite simple for the user actually

540.86 547.49 it's not simple in its implementation

544.69 549.47 what is it but is it first like if

547.49 551.72 nobody if somebody hasn't heard of it or

549.47 555.17 what it what is this little description

551.72 557.839 so let's say let's let's start with the

555.17 561.29 simplest case right you have a frame

557.839 565.1 buffer on our toes and you create your

561.29 570.02 rendering engine right so you tailor

565.1 572.93 everything to you tailor everything for

570.02 576.14 that artists your whole rendering

572.93 577.64 pipeline is oriented towards having just

576.14 580.37 one frame buffer that you can't directly

577.64 582.83 access and everything works nice your

580.37 585.8 input comes from from interrupts or

582.83 589.55 whatever then imagine that you want to

585.8 591.68 port that to with a minimal effort to I

589.55 595.04 don't know a desktop simulator on

591.68 596.69 Windows or Mac then all your rendering

595.04 600.29 functions basically stop working because

596.69 603.37 Windows uses its own API for rendering

600.29 608.62 and for window creation and for input

603.37 612.31 for events etc and Mac uses a different

608.62 615.5 scheme Linux this is a different scheme

612.31 618.5 Android doesn't even have a main loop

615.5 621.68 that you can use so what SDL does is

618.5 627.02 abstract all of that into a single API

621.68 629.209 slash application philosophy so instead

627.02 631.49 of having to worry about how you create

629.209 634.459 window a window on windows some

631.49 637.43 background Linux you create you call SPL

634.459 640.31 underscore create window and everything

637.43 642.83 is magically so internally you don't

640.31 646.49 need to worry about how the main loops

642.83 649.22 of the OS work you don't need to worry

646.49 652.04 about how to read the keyboard or the

649.22 653.82 gamepad or the mouse everything comes as

652.04 656.52 events in this

653.82 658.56 way across all platforms so it's

656.52 665.73 basically a harbor and always

658.56 669.62 abstraction like yeah cutie cute to some

665.73 672.27 extent but cute is much more it's it's

669.62 675.36 it's more of an app of total application

672.27 677.31 framework so it has networking and all

675.36 679.86 kinds of stuff language extensions

677.31 684.54 whereas this is this isn't see it's more

679.86 688.38 directed toward input and graphics do I

684.54 691.08 have that right so yeah so I don't know

688.38 693.6 how cutie obstructs platforms internally

691.08 695.94 but you could have for example cutie a

693.6 698.01 port that works on top of 50 STL if you

695.94 700.83 want it like STL provides the per

698.01 704.52 minimal layer to abstract window

700.83 707.1 creation input OpenGL context creation

704.52 710.43 and that's it QT provides a whole bunch

707.1 713.76 of other stuff okay

710.43 720.15 how do these relate to like OpenGL and

713.76 723.33 direct3d so after you create a window if

720.15 726.12 you want to render using GPU you need

723.33 728.4 something that's called an OpenGL

726.12 730.8 context which is basically a way to

728.4 732.9 reference what you're doing for the hard

730.8 736.86 work to know that you are the one

732.9 740.91 issuing instructions and you which text

736.86 743.36 or euro you own etc so the way you do

740.91 747.06 that is different on each platform

743.36 749.46 creating an opportunity is not really

747.06 752.67 part of the OpenGL specification but a

749.46 755.64 part of the window manager slash OpenGL

752.67 760.05 integration so as DL abstracts all of

755.64 760.68 these and it manages the windows way of

760.05 762.72 doing it

760.68 765.63 the egl way of doing it the back way of

762.72 767.85 doing it and you just have to call SPL

765.63 770.01 chair clear context or whatever it's

767.85 772.32 called and you get a context and don't

770.01 777.0 have to worry about any of the internal

772.32 779.16 details and it also has a neat way to on

777.0 781.53 up in OpenGL you need to load the

779.16 784.5 function pointers from the library if

781.53 786.63 you don't want to make statically and it

784.5 787.649 helps you with that as well it's not the

786.63 792.449 only library that does

787.649 798.149 this but it's it's a nice utility that

792.449 800.85 provides how does all of this so I know

798.149 802.889 you're an expert in STL because I know

800.85 807.509 you've contributed to it it's an open

802.889 815.029 source project how does this relate to

807.509 817.61 embedded systems it doesn't so STL

815.029 820.769 doesn't really have support for

817.61 823.139 narratives right so if we equate

820.769 825.529 embedded systems to having an artists or

823.139 829.11 not having an artist at all

825.529 832.29 STL doesn't really apply here but there

829.11 835.35 are a growing number of small wearables

832.29 838.29 that use Linux and if you want to for

835.35 840.959 example develop an app and not have to

838.29 841.47 download it constantly to the device to

840.959 844.98 try it

841.47 848.329 you can develop an SPL app you try it on

844.98 851.61 the desktop you use the OpenGL ES

848.329 854.67 graphics stack and what you see on the

851.61 856.529 desktop is going to be exactly or very

854.67 859.8 close to what you see on the device and

856.529 861.5 so that cuts down development time by a

859.8 866.61 lot

861.5 870.93 and there are many devices doing Linux

866.61 873.69 embedded yeah if I wanted to have

870.93 877.53 something that was doing Linux and was

873.69 880.71 making graphics I mean I guess you know

877.53 883.08 when I do embedded Linux I just plug in

880.71 887.34 an HDMI screen and it all just kind of

883.08 894.0 works but that's not that's not what

887.34 897.39 you're talking about let's say can we

894.0 900.45 consider the Raspberry Pi platform yes

897.39 902.76 yeah okay so let's say you want to

900.45 904.83 develop for Raspberry Pi and you don't

902.76 908.34 want to compile everything on device

904.83 910.92 because it takes forever yeah yeah so

908.34 913.47 you cross compile and then once you

910.92 916.59 cross compile you have to download it to

913.47 920.55 the Raspberry Pi try it run it try it

916.59 922.86 with the whatever input you've managed

920.55 926.0 to connect to the Raspberry Pi and see

922.86 928.74 what it looks like or what you can do is

926.0 930.12 that what's basically that same app on

928.74 933.12 your desktop

930.12 936.09 peel it right there mess around with the

933.12 939.21 UI as much as you want and once you're

936.09 941.25 settled with that you know that STL is

939.21 942.78 going to abstract most of the

941.25 944.97 differences in Hauer

942.78 947.7 because your desktop has a different GPU

944.97 952.68 and it probably has a different

947.7 955.08 resolution etc and so you try you send

952.68 957.63 that which is basically there's pretty

955.08 961.71 much the same code pinned it on top of

957.63 966.15 STL and OpenGL ES and that should run on

961.71 969.48 the Raspberry Pi mostly unmodified so

966.15 971.22 it's it this doesn't mean that you

969.48 973.08 cannot develop on the Raspberry Pi

971.22 975.36 directly or that you shouldn't

973.08 978.15 it is saves time if especially if you're

975.36 981.87 doing a complex project it's also nice

978.15 984.39 to be able to give a simulator to your

981.87 987.6 designers and say well this is what it's

984.39 988.86 gonna look like on the thing and then

987.6 992.4 you don't care if the designers are

988.86 995.41 using Mac or Windows or Linux and you

992.4 998.56 still get a reasonable fuck

995.41 1001.74 of what their version of graphics is

998.56 1005.85 gonna look like on the embedded version

1001.74 1008.31 of graphics on the device yes and if for

1005.85 1011.19 example tomorrow competitor to the

1008.31 1013.35 Raspberry Pi show SAP and the software

1011.19 1017.55 stack that they provide doesn't have a

1013.35 1020.13 window manager but it has direct

1017.55 1024.209 hardware access for example most of the

1020.13 1026.73 event the GPUs have that so SDL supports

1024.209 1029.67 Peapod these GPUs directly and it can

1026.73 1031.86 create windows on the directly without

1029.67 1034.679 having to go through a window manager so

1031.86 1036.929 you your code runs on that it's a

1034.679 1039.12 different view it if a whole different

1036.929 1041.88 system and you don't have to change

1039.12 1044.4 anything for that to work and of course

1041.88 1046.89 if you're doing things like games you

1044.4 1049.59 support multiple platforms out of the

1046.89 1051.39 box with minimal effort you have an

1049.59 1052.679 elected the STA one of the things that

1051.39 1054.12 people were saying about it was there's

1052.679 1057.48 a game engine I'm like I don't think

1054.12 1059.94 that's right but it's not it's not a

1057.48 1062.1 game engine it's a it's a platform an OS

1059.94 1065.73 abstraction layer you you still have to

1062.1 1067.95 make your own engine on top of that but

1065.73 1070.98 SEO makes it simpler because you can

1067.95 1072.66 make a game engine that is mostly

1070.98 1076.17 cross-platform so you don't have to

1072.66 1078.39 worry about the display systems the

1076.17 1082.35 display and the input and many other

1078.39 1086.309 things yes sound as well in addition

1082.35 1087.89 today you did a database thing with STL

1086.309 1090.54 let me see if I've got this right

1087.89 1093.15 community sourced database of game

1090.54 1094.98 controller map means to be used with STL

1093.15 1097.14 to game controller functionality

1094.98 1102.95 I don't think all those words go

1097.14 1107.07 together so one of the things that SDL

1102.95 1110.429 added quite recently or maybe in the

1107.07 1112.35 last four years it's a way to abstract

1110.429 1114.45 game controllers so if you look at

1112.35 1116.04 different game controllers the most

1114.45 1118.26 popular ones are the Xbox and

1116.04 1120.57 Playstation ones and then there's a

1118.26 1122.82 whole myriad of buttons and things that

1120.57 1125.07 if you are a game developer for example

1122.82 1129.53 and you want to map all of that variety

1125.07 1133.98 to something consistent on your game

1129.53 1136.92 you're basically facing a titanic task

1133.98 1138.63 because you need to know what what

1136.92 1141.24 possible things the user may have in

1138.63 1144.54 their home and that they let them to use

1141.24 1147.33 on your game and map that somehow to the

1144.54 1149.28 game one of the most common solutions is

1147.33 1150.929 to have some kind of mapping

1149.28 1152.82 functionality in the game where it says

1150.929 1154.32 okay press the button to jump and you

1152.82 1157.95 press something and then that gets

1154.32 1163.32 recorded the database that you're

1157.95 1166.46 referring to is a way to formalize on

1163.32 1170.88 that so as the else supports mapping of

1166.46 1173.49 many controllers to an Xbox controller

1170.88 1175.2 format and people around the world have

1173.49 1176.73 been contributing those mappings that

1175.2 1179.7 they do with the controllers that they

1176.73 1185.37 get their hands on and we aggregate all

1179.7 1187.29 of that into this database so once when

1185.37 1191.07 anyone wants to ship a game and support

1187.29 1193.65 a whole bunch of controllers besides the

1191.07 1196.5 ones that still supports out of the box

1193.65 1198.6 which is fairly minimal amount they load

1196.5 1200.25 up this database and they can support I

1198.6 1204.57 don't know the last time I checked it

1200.25 1207.42 was like 300 computers mentally I have

1204.57 1210.15 this pictured as though it was I was

1207.42 1212.01 using code composer and switched out the

1210.15 1215.82 key bindings to match my Visual Studio

1212.01 1217.35 code is that is that a good mental model

1215.82 1219.6 or is that yes totally do it okay that's

1217.35 1220.98 it that's exactly what it is yes the

1219.6 1225.45 mental model of somebody doesn't play

1220.98 1228.57 enough games that's true or place with

1225.45 1233.37 keyboard and mouse no I had the VR

1228.57 1235.679 system and play with my feet so this

1233.37 1238.23 database thing and the STL things you do

1235.679 1243.09 and it's all open source and how do you

1238.23 1246.09 get paid you don't it's it's an

1243.09 1250.02 investment basically so the story is

1246.09 1252.78 that I started with some friends try to

1250.02 1254.79 make a game and to make a game of course

1252.78 1256.679 the first thing that they tell you is if

1254.79 1258.69 you're making a game don't make your own

1256.679 1261.78 nature so what did we do

1258.69 1262.59 we started making of course the end the

1261.78 1264.87 action was

1262.59 1267.509 SDL and I still had a number of

1264.87 1271.11 shortcomings that were angry on me so I

1267.509 1273.419 start to contribute in there and sings

1271.11 1276.72 one singlet to another and ended up

1273.419 1279.21 working on company in the u.s. that

1276.72 1282.96 basically found me through my open

1279.21 1285.419 source contributions the the reason why

1282.96 1289.98 I did those contributions is to learn

1285.419 1292.769 and also to get some recognition or two

1289.98 1297.749 it's it's a way to build up your resume

1292.769 1299.519 when you don't have specific expertise

1297.749 1304.259 in the area that you want to work in

1299.519 1306.809 probably so yeah it's a there's a lot of

1304.259 1308.48 paid open-source development but I

1306.809 1310.74 haven't been a button that it's been

1308.48 1314.19 everything is being voluntary for me

1310.74 1315.96 cool awesome listener question some of

1314.19 1321.179 which you've seen because you're in our

1315.96 1324.24 slack Channel let's see how about secret

1321.179 1327.299 is out many people are in our slack

1324.24 1328.799 Channel and if you want to be in our

1327.299 1331.86 slack channel in your listener all you

1328.799 1335.309 have to do is contribute a buck or two

1331.86 1338.09 on patreon and then you get the link in

1335.309 1338.09 then you can say hello

1338.24 1344.549 okay so Nick Nick asked Nick the

1341.34 1346.619 exploding lemur asked if you have any

1344.549 1349.379 tips for hunting down processors with

1346.619 1351.629 stable graphics drivers and/or easily

1349.379 1358.07 acquired graphics engine specs and open

1351.629 1362.73 drivers so the state of GPU drivers is

1358.07 1365.07 very bad the only ones I know of that

1362.73 1367.409 open source and quite good actually at

1365.07 1370.47 the Raspberry Pi one which is I think a

1367.409 1373.2 work in progress and then on desktop you

1370.47 1376.429 have the Intel works besides that

1373.2 1381.149 everything is be behind three layers of

1376.429 1383.7 DRAM and NDA's and Chris knows about

1381.149 1385.619 this you talk to one vendor and they

1383.7 1390.5 talk to the other vendor and you finally

1385.619 1393.769 get to the one that sells the GPU IP and

1390.5 1395.7 nobody gives you any internal details

1393.769 1397.86 unless

1395.7 1400.26 probably talking from VP to VP level

1397.86 1402.659 it's very complicated of course they're

1400.26 1404.159 doing super-secret stuff so I can

1402.659 1406.37 understand I'm not sure no it's all the

1404.159 1406.37 same

1407.809 1412.799 what about below that I mean that's

1410.039 1414.75 that's GPU stuff but in the

1412.799 1418.169 microcontroller world there's not a lot

1414.75 1420.149 of for hobbyists or people you know

1418.169 1423.51 doing like thinking about a Kickstarter

1420.149 1427.289 project there's not a lot of devices

1423.51 1431.46 that help out much with graphics no kind

1427.289 1435.0 of a 2d space yeah I've seen a couple of

1431.46 1438.059 SD chips that have a 2d accelerator

1435.0 1442.26 which is essentially a DMA engine that

1438.059 1443.85 can do like to the transfers where you

1442.26 1446.519 can specify an area and copy it to

1443.85 1448.919 another area and a bit more about them

1446.519 1452.22 that is an engine that can do scaling

1448.919 1455.279 and maybe rotation in 2d but that's

1452.22 1458.01 pretty much it if the other issue with

1455.279 1461.34 this kind of implementations is that

1458.01 1463.5 they're very a doc so each manufacturer

1461.34 1468.179 does their own thing and there's

1463.5 1470.46 absolutely no standards and maybe many

1468.179 1473.58 of those implementations are not very

1470.46 1477.57 distributed so expect plenty of bugs if

1473.58 1480.389 you're doing that and it's a huge

1477.57 1485.72 security risk in a way because you're

1480.389 1489.419 moving data around behind the CPU

1485.72 1493.5 protection mechanisms so you can easily

1489.419 1497.279 shoot yourself in the foot when you talk

1493.5 1499.44 about moving data into frame buffers and

1497.279 1502.799 being able to scale it some of that has

1499.44 1505.61 to do with fonts and having a font in

1502.799 1509.73 flash and then moving it to the screen

1505.61 1511.559 or having a letter in flash and moving

1509.73 1517.44 it to the screen because the font is a

1511.559 1518.82 series of letters how do you how do you

1517.44 1521.46 deal with fonts do you have a favorite

1518.82 1523.71 font do you prefer to do vectors and and

1521.46 1526.139 take the computing overhead do you

1523.71 1529.29 usually use bitmap fonts what do you

1526.139 1533.46 want to do so

1529.29 1537.69 yeah vector phones are ideal they

1533.46 1541.92 usually cost you just a little bit above

1537.69 1544.62 what you can spend on systems mostly

1541.92 1547.79 because they hover around a hundred K

1544.62 1550.5 and I have the case probably just

1547.79 1554.18 outside of your budget in many embedded

1550.5 1557.76 systems it's basically a compression

1554.18 1559.92 mechanism right you have the vectors in

1557.76 1562.83 a in a file and when you want to render

1559.92 1565.95 something you tessellate these vectors

1562.83 1569.79 into a bitmap and gosh that probably

1565.95 1572.75 somewhere and use that so if you are

1569.79 1576.03 using bitmap fonts what you're doing is

1572.75 1578.58 most of the same process butterfly yeah

1576.03 1581.91 you start from a font and you render the

1578.58 1584.19 bitmaps and you store only the bitmap on

1581.91 1586.95 your flash memory the issue with that is

1584.19 1591.75 that you cannot really change your text

1586.95 1593.73 size and you need to have space to store

1591.75 1596.25 all of the glyphs that you want to

1593.73 1598.88 render which if you're supporting things

1596.25 1605.1 like Chinese for example it's not a

1598.88 1607.53 trivial amount of space I think most of

1605.1 1610.5 the cortex-m processors can render

1607.53 1616.2 TrueType fonts correctly if you have the

1610.5 1618.33 run so if you have above I say 256 K of

1616.2 1622.29 nori you should probably give two type

1618.33 1623.1 fonts ago there is it's work with very

1622.29 1624.6 easy to work with

1623.1 1628.26 see how he's heard if they were really

1624.6 1631.05 hard kind of avoided them you need a

1628.26 1634.53 library yeah you you've got to

1631.05 1636.38 open-source libraries free type and STP

1634.53 1642.15 to type which is actually one of those

1636.38 1644.67 single feather priests like so much so

1642.15 1647.52 you just use that and it gives you

1644.67 1651.24 whatever you want okay good question

1647.52 1652.89 from Ben which was initially phrased why

1651.24 1655.08 do the displays that the gas-station

1652.89 1658.71 take five years to update for every key

1655.08 1660.26 press and then was changed to what are

1658.71 1661.97 some common mistakes made during

1660.26 1668.95 embedded graphics

1661.97 1674.66 I mean that 35 or 40 more minutes

1668.95 1677.92 mqtt tears right last time the I think

1674.66 1680.57 the thing that people don't understand

1677.92 1683.66 the the most common misunderstanding

1680.57 1688.94 about graphics is that graphics is a

1683.66 1691.1 bandwidth about operation right you you

1688.94 1693.44 do have some CPU processing and GPU

1691.1 1695.9 processing but the first limit that

1693.44 1698.87 you're going to hit is going to be the

1695.9 1703.19 bandwidth limit because it's mostly

1698.87 1705.77 about transferring information so in the

1703.19 1709.1 case of very slow displacing gas

1705.77 1711.62 stations or ATMs or whatever what

1709.1 1715.1 usually happens is that they choose a

1711.62 1717.76 processor for price reasons or business

1715.1 1720.11 reasons or whatever and then they make a

1717.76 1722.3 totally separate decision about the

1720.11 1725.84 resolution based on what this place they

1722.3 1727.79 can get or what resolution but visual

1725.84 1730.07 impact they want to have on the user and

1727.79 1731.75 then those things are completely

1730.07 1734.24 separate and they usually don't match up

1731.75 1737.9 and then that's why you end up with

1734.24 1740.72 those ugly low frame rates that you

1737.9 1743.03 could you say this is one of the reasons

1740.72 1746.12 that we do when we talk about DMA when

1743.03 1748.1 we talk about graphics because it is all

1746.12 1751.55 about moving things from here to there

1748.1 1754.63 as fast as possible and still being able

1751.55 1758.8 to do other stuff yep

1754.63 1758.8 are there other common mistakes

1760.07 1764.25 the other common mistake which is

1762.24 1767.04 related to probably one of the other

1764.25 1769.92 questions that I saw on the slab channel

1767.04 1772.52 is across products

1769.92 1776.58 the resolution is evaluated as a new

1772.52 1778.44 thing all the time so you change

1776.58 1780.57 products and you change completely the

1778.44 1783.45 resolution because again business

1780.57 1786.3 reasons or reliability or whatever and

1783.45 1789.03 then you start on your second product

1786.3 1792.36 you start maintaining two sets of assets

1789.03 1796.28 which don't really mesh with each other

1792.36 1799.53 and on the server iteration you start

1796.28 1804.66 handling three types of aspect ratios

1799.53 1809.46 and it all gets complicated so one if I

1804.66 1812.25 could make a choice across an entire set

1809.46 1814.38 of products I'd say stick to the same

1812.25 1817.89 resolution or at least stick to the same

1814.38 1819.99 aspect ratio that's a hard problem even

1817.89 1822.09 when you're not doing you know a small

1819.99 1825.27 embedded system that's even if you're

1822.09 1826.8 doing something with Linux or Apple's

1825.27 1827.91 had this problem right oh we came out

1826.8 1829.83 with a new phone and now all the

1827.91 1831.72 developers have to go and regenerate

1829.83 1833.13 everything and there's no good way to

1831.72 1834.69 make this automatable because things

1833.13 1836.28 don't look good when they're scaled or

1834.69 1839.34 when they're automatically laid out so

1836.28 1841.14 yeah it's a big problem every time when

1839.34 1842.91 you look at movies I mean you have

1841.14 1844.5 different scaling on whether whether

1842.91 1846.9 you're watching it on TV with the black

1844.5 1848.43 bars or whether you're in the movie

1846.9 1850.05 theater or whether you're watching an

1848.43 1853.07 old movie or a new movie the aspect

1850.05 1856.52 ratio and resolution that's just a

1853.07 1861.27 never-ending problem yep

1856.52 1866.85 and trying to decouple it in your code

1861.27 1869.43 is a great idea but as Chris said you it

1866.85 1872.88 looks different so you can't just say oh

1869.43 1876.54 we're gonna pound F that out it's not it

1872.88 1878.46 doesn't work like that yeah so there's a

1876.54 1882.3 few techniques that came mostly from

1878.46 1885.09 their web development work because web

1882.3 1887.67 the web pages are subject to a bunch of

1885.09 1889.8 resolutions and they need to look from

1887.67 1892.56 this basically what's the same set of

1889.8 1893.04 assets and code they need to look the

1892.56 1895.41 same

1893.04 1897.9 roughly the same so there are techniques

1895.41 1900.6 to minimize that but they cost in terms

1897.9 1902.88 of treatment development and CPU

1900.6 1905.97 processing power so they're not always

1902.88 1908.07 feasible on about systems well it's gone

1905.97 1910.2 and talked about mqtt because there were

1908.07 1913.13 some questions about that and I heard

1910.2 1916.83 you have been doing some home automation

1913.13 1918.93 yes though I must warn you that mqtt is

1916.83 1921.51 so great that I'm willfully ignorant of

1918.93 1925.71 all its internal implementation details

1921.51 1929.87 I enjoy it as an end user mostly what is

1925.71 1933.6 it it's a communications protocol

1929.87 1939.23 typically associated to IOT devices

1933.6 1945.81 it runs on tcp/ip and it follows

1939.23 1947.79 publication subscription principles ok

1945.81 1950.31 so you've already said tcp/ip and I'm

1947.79 1952.38 like oh I'll just take out all my micros

1950.31 1954.45 because that's that's heavy weight to

1952.38 1955.89 start with and then this is on top of it

1954.45 1959.1 it's the Internet of Things if you don't

1955.89 1962.01 have PCP IP you're just a thing I'm okay

1959.1 1963.78 with that that's a there's a there's a

1962.01 1966.32 variant that I'm not really familiar

1963.78 1970.89 with that doesn't run on top of tcp/ip

1966.32 1974.76 but I mean we're talking something that

1970.89 1980.4 can do at least Wi-Fi or Ethernet and

1974.76 1982.92 cover tcp/ip stack okay so it's it's on

1980.4 1985.83 top of tcp/ip

1982.92 1989.81 so guarantee transmissions as long as

1985.83 1994.52 you have the path between them and

1989.81 1998.49 publish/subscribe so your widget your

1994.52 2000.77 IOT thing probably publishes the data

1998.49 2003.59 and then some server like things

2000.77 2008.33 subscribes how does how does it work

2003.59 2010.79 so there's you need to have one broker I

2008.33 2013.25 use mosquito there's a bunch of them

2010.79 2017.24 which is like the half the central point

2013.25 2019.49 of the MQTT network and everything else

2017.24 2023.65 is a client and each client can

2019.49 2026.48 subscribe or publish information the

2023.65 2028.99 processes you

2026.48 2031.88 something with a topic and a payload and

2028.99 2034.04 the other clients can subscribe to a

2031.88 2037.12 topic and when you publish to that topic

2034.04 2041.84 take at the payload that you transmit it

2037.12 2045.47 it's here to stores IOT devices so the

2041.84 2049.1 whole my device went offline expecting

2045.47 2050.869 you have messages for availability so

2049.1 2053.09 whenever you come online you say I'm

2050.869 2055.399 available and whenever the broker sees

2053.09 2058.159 that you've gone offline because you

2055.399 2063.169 don't respond it's automatically a

2058.159 2065.78 message saying this device is offline it

2063.169 2068.6 also retains miss the broker can retain

2065.78 2071.84 messages so for example if you want to

2068.6 2075.5 talk to a thermostat and have a

2071.84 2078.98 temperature setting you publish I don't

2075.5 2079.879 know ABF I want to set into the ADF and

2078.98 2082.19 retain that

2079.879 2084.619 so whenever the thermostat comes back

2082.19 2088.07 online the broker communicates that

2084.619 2091.639 information automatically and the other

2088.07 2095.48 piece of technology that it has is a QoS

2091.639 2097.7 setting a quality of service which says

2095.48 2099.68 if you want the message to be

2097.7 2101.6 transferred once or if you really want

2099.68 2106.67 to make sure that the message is

2101.6 2109.46 received by our clients okay so mosquito

2106.67 2112.07 is the broker and it is sort of the hub

2109.46 2113.75 yes what do you run that on do you have

2112.07 2115.4 like a home server or are you running

2113.75 2119.859 that annika Raspberry Pi sort of thing

2115.4 2123.55 so at home I have a has a ou

2119.859 2126.64 distribution which is a home assistant

2123.55 2132.92 Bistro that runs with the Raspberry Pi

2126.64 2135.14 it's center around containers and on one

2132.92 2137.45 of the containers you run mosquito and

2135.14 2139.16 everything talks to that and home

2137.45 2140.39 assistant talks to that as well so

2139.16 2144.109 everything connects through the

2140.39 2148.45 Raspberry Pi what do you have for the

2144.109 2154.04 devices Oh devices it's mostly

2148.45 2157.22 esp8266 no that's you for the doors and

2154.04 2158.36 lights that kind of thing did you say

2157.22 2160.88 node

2158.36 2171.47 nah yeah it's called now them Co so I

2160.88 2173.93 click like Inc like it now you know it's

2171.47 2175.97 called no then see you and it out of the

2173.93 2180.65 box it grants Louis oh nothing make

2175.97 2182.15 sense okay what are you building with

2180.65 2183.53 this we knew and when I first heard of

2182.15 2186.49 this you were gonna do like one little

2183.53 2190.81 thing yeah I had a greenhouse

2186.49 2198.41 temperature control now I have two doors

2190.81 2201.26 lights the home alarm and the heating

2198.41 2202.85 system of the house connected there it's

2201.26 2204.74 pretty neat because you program

2202.85 2207.26 everything in micro Python or if you

2204.74 2211.07 doing something a bit more intensive you

2207.26 2214.28 use platform i/o we know framework and

2211.07 2218.06 it's just plug and play mostly it's very

2214.28 2220.43 satisfying way of working I don't even

2218.06 2220.88 know how you install the tool change for

2220.43 2222.98 this

2220.88 2225.2 everything is click click click click

2222.98 2228.53 here and everything works perfectly

2225.2 2231.11 it's amazing what about power I mean if

2228.53 2234.14 you're alarming if you're alarming doors

2231.11 2236.9 if you have door alarms don't those just

2234.14 2241.25 run on batteries and the esps are ok but

2236.9 2244.58 they're not like long-term batteries the

2241.25 2247.79 USB for the alarm is connected to the

2244.58 2250.37 alarm battery which is like a huge brick

2247.79 2252.83 that can last a few days

2250.37 2255.17 yeah that's no issue and also being

2252.83 2256.8 worrying about battery life for 4 years

2255.17 2260.95 old I don't care anymore

2256.8 2263.33 [Laughter]

2260.95 2264.59 MQTT comes in flavors do you have to

2263.33 2268.61 worry about any of that or does it all

2264.59 2271.75 just kind of poof works it magically

2268.61 2274.94 works yeah I I don't think there's

2271.75 2277.25 versioning at least

2274.94 2280.61 so since I'm building everything

2277.25 2282.17 basically from the say saying source

2280.61 2284.75 code everything works

2282.17 2286.97 I know if I bring a binary from

2284.75 2288.8 somewhere else into my home automation

2286.97 2291.71 which doesn't seem like a the best idea

2288.8 2292.22 in the world probably won't work

2291.71 2295.369 I don't

2292.22 2299.359 how it manages versioning you make this

2295.369 2305.24 sound very easy it's surprisingly easy

2299.359 2308.42 yeah on Python you just create a client

2305.24 2310.07 and issue MQTT that subscribe to

2308.42 2312.26 subtopic and you start getting call

2310.07 2314.63 backs for that that's what you have to

2312.26 2316.91 do it's three lines it's funny as you

2314.63 2318.89 talk about the architecture of it with

2316.91 2321.2 the publish and subscribe and the broker

2318.89 2324.8 and it sounds very much like robot

2321.2 2327.08 operating system okay but going on going

2324.8 2331.67 on to the next subject of my long list

2327.08 2332.859 of things to ask a Gabrielle about where

2331.67 2336.02 are you based

2332.859 2340.58 I'm in Argentina in a city called Mar

2336.02 2345.89 del Plata 400 kilometres south of Buenos

2340.58 2349.04 Aires on the coast and I have met you in

2345.89 2350.48 person near San Francisco how many hours

2349.04 2353.66 did you have to travel to get San

2350.48 2357.05 Francisco so there's no direct flights

2353.66 2360.05 to San Francisco from Argentina

2357.05 2363.56 and there's no definitely no direct

2360.05 2367.46 flights from foreign to anywhere from my

2363.56 2371.119 city so I had to take a bus to what

2367.46 2373.94 Osiris and then you typically go to LA

2371.119 2375.56 if you're lucky and then from there to

2373.94 2379.88 SF or San Diego

2375.56 2382.58 so it's about 20 hours 22 hours if

2379.88 2386.75 you're lucky I see you don't commute

2382.58 2391.19 regularly no my communities from my bed

2386.75 2392.66 to my desktop how do you how do you

2391.19 2396.88 handle that I have is working remotely

2392.66 2401.81 for you and and how do you make it work

2396.88 2404.54 and not distraction though I mean it's a

2401.81 2408.89 nice deal it's not easy to get started

2404.54 2413.589 doing this it it it has all the

2408.89 2416.99 challenges of working at home focus of

2413.589 2419.63 doing the things - especially working in

2416.99 2421.31 Hardware pinyon Argentina the hair needs

2419.63 2425.72 to be shape in its go through customs

2421.31 2427.49 that's a whole ordeal and

2425.72 2431.33 and the companies that you work with

2427.49 2434.68 need to be remote oriented in a way they

2431.33 2438.22 to be prepared to have remote workers

2434.68 2442.01 cut the philosophy required to do that

2438.22 2444.59 but that's probably not different from

2442.01 2447.59 the work that you do there right being

2444.59 2450.349 about hundred kilometres or a thousand

2447.59 2452.66 or ten thousand is the same in terms of

2450.349 2455.119 human interaction the things that get

2452.66 2457.55 more complicated is when you jump across

2455.119 2460.31 countries and you're doing horrible

2457.55 2461.84 projects I started doing software

2460.31 2465.98 projects basically web development

2461.84 2469.67 initially because it's much easier to

2465.98 2475.33 work like that against the server on the

2469.67 2478.099 Amazon Cloud Data Brazil buddy Seattle

2475.33 2480.56 that if if you depend on hard work that

2478.099 2484.7 maybe breaks and you need to wait a week

2480.56 2486.34 or two to get a replacement work do you

2484.7 2490.369 have any advice for people who want to

2486.34 2491.69 work remotely in general and then do you

2490.369 2493.46 have any advice review who went to work

2491.69 2498.8 remotely internationally like you're

2493.46 2500.66 doing I think the the first thing if you

2498.8 2504.17 want to work for example from Argentina

2500.66 2506.72 for US companies it's just get started

2504.17 2509.57 just make an account on freelance or

2506.72 2513.589 Elance or oDesk or whatever it's called

2509.57 2515.78 now and just get cheeks doing PHP or

2513.589 2520.16 JavaScript work and it's going to pay

2515.78 2524.47 very loudly just do that for some time

2520.16 2527.0 to get used to working remotely the

2524.47 2528.65 you're not going to get the most amazing

2527.0 2532.099 jobs doing that but you're going to

2528.65 2534.97 create a resume and and work that you

2532.099 2539.089 can point to maybe more interesting

2534.97 2541.67 employers saying to them basically I'm

2539.089 2545.48 responsible I can manage my own time and

2541.67 2547.97 I can get things done and then after

2545.48 2551.72 that is the same as for any work you

2547.97 2554.839 need to establish relationships with

2551.72 2558.109 people and people need to know you know

2554.839 2559.609 what you can do and if you cannot get

2558.109 2561.799 into an area that you

2559.609 2565.969 then look for open-source projects that

2561.799 2568.13 you can contribute to as a way to prove

2565.969 2569.539 that you can get the work done there any

2568.13 2571.88 other pitfalls that you've come across

2569.539 2573.829 just in terms of mechanics of things

2571.88 2575.9 like shipping I know that sometimes

2573.829 2578.299 shipping Hardware can be a pain because

2575.9 2582.469 it gets either confiscated or stuck in

2578.299 2584.119 customs are there ways to to suggest to

2582.469 2586.459 the companies you work for to smooth

2584.119 2588.559 those things over or is that just kind

2586.459 2593.69 of constituting business yeah in

2588.559 2597.799 Argentina in particular FedEx is the can

2593.69 2600.079 we advertise companies yeah FedEx please

2597.799 2603.89 send us a check yeah exactly let's let

2600.079 2605.93 give us a couple of three shipments it's

2603.89 2609.2 the best way to send things they

2605.93 2611.329 typically take a week to get stuff here

2609.2 2613.9 and it usually doesn't get bothered by

2611.329 2620.9 customs if you stay within the courier

2613.9 2624.259 weight and price limits and then if you

2620.9 2626.449 go beyond that then you start getting

2624.259 2629.9 issues right but that's that's like a

2626.449 2633.499 logistics problem that it's it's not

2629.9 2640.519 really in your hands to to solve to do

2633.499 2642.199 anything about I say that the most

2640.519 2645.559 difficult thing working probably

2642.199 2647.93 probably for you is the same is getting

2645.559 2650.359 people to acknowledge you and keep you

2647.93 2652.16 in the loop on things that's the when

2650.359 2654.289 you're not physically present talking

2652.16 2656.599 face to face to people the relationship

2654.289 2660.259 changes especially when there's a time

2656.599 2662.69 zone change yeah so if you can visit in

2660.259 2666.38 person every now and then that smooth

2662.69 2668.829 things watched you and I found that

2666.38 2674.66 working remotely has helped with some

2668.829 2677.509 jobs my lab is pretty good compared to

2674.66 2680.119 many of the startups I work with my

2677.509 2684.979 office is extraordinarily quiet compared

2680.119 2686.92 to many of the offices I visit and when

2684.979 2690.199 I work remotely we get better at

2686.92 2692.839 documentation part of that's just cuz I

2690.199 2693.23 document things and I like to and I

2692.839 2694.88 liked

2693.23 2696.53 have them documented because I like to

2694.88 2700.52 forget things very quickly and the

2696.53 2702.83 documents help me but also the documents

2700.52 2706.7 help them whether they realize that or

2702.83 2708.74 not I realize it when somebody emails me

2706.7 2710.39 from a client I worked on two years ago

2708.74 2711.859 and says I thought this would be

2710.39 2714.26 impossible and then I Richard document

2711.859 2717.5 realized I only had to uncomment like

2714.26 2719.57 one line and it was all good and I mean

2717.5 2723.55 that sort of thing is awesome also you

2719.57 2732.47 cannot not if you're working on office

2723.55 2734.78 is not true yeah

2732.47 2736.46 so if you're not feeling well if you

2734.78 2740.03 feel like you're blocked by a problem

2736.46 2744.05 exists you're to just get up and take a

2740.03 2745.97 walk or whatever in your head and come

2744.05 2749.359 back concentrate on on the problem

2745.97 2752.72 really think it through the speciality

2749.359 2756.55 OpenOffice plants that have become

2752.72 2760.19 typically in the US are very distracting

2756.55 2762.109 it's at least for me personally mostly

2760.19 2768.91 because I'm not used to them it cuts by

2762.109 2771.65 productivity a lot I totally agree and

2768.91 2775.64 working as a consultant being able to

2771.65 2778.97 clock out and go for a walk it's just so

2775.64 2780.83 valuable yeah because it also benefits

2778.97 2783.77 the company because your brain really

2780.83 2786.71 doesn't stop processing the what you're

2783.77 2789.859 doing but you can really build for

2786.71 2794.78 taking a walk at least I don't may be

2789.859 2797.3 shocked but when you're doing that

2794.78 2800.06 you're really thinking the problem that

2797.3 2803.26 you're facing the background yes very

2800.06 2805.66 much yes yes going back to graphics

2803.26 2807.95 Chris you had another couple questions

2805.66 2809.81 there was one in the list here that I

2807.95 2812.24 thought I think we skipped over that was

2809.81 2814.28 kind of the crux of the difficulty of

2812.24 2816.14 graphics on embedded systems and that's

2814.28 2819.92 if you're doing something moderately

2816.14 2823.41 complicated the dance between updating

2819.92 2827.5 the frame buffer syncing

2823.41 2829.03 updating the screen I just like to talk

2827.5 2830.83 about that a little bit to give people a

2829.03 2832.42 sense for okay if you really want to do

2830.83 2834.31 something that maybe has animation

2832.42 2836.08 that's fluid and doesn't have tearing

2834.31 2839.68 heart effects how you go about

2836.08 2841.33 architecting your system first you have

2839.68 2844.3 to describe what tearing me Oh

2841.33 2845.95 tearing would be so if you if you're

2844.3 2848.56 updating your frame buffer out of sync

2845.95 2851.56 with how the display is perhaps reading

2848.56 2853.18 it out you might have half of your

2851.56 2855.34 screen updated in the frame buffer and

2853.18 2856.57 half old data and then the display might

2855.34 2859.63 read it out and put it on the display

2856.57 2862.36 and then you tap this half updated

2859.63 2864.07 screen which since oftentimes you're

2862.36 2866.83 moving something it would look like

2864.07 2870.37 you've got a big tear mark aligned

2866.83 2873.04 across the screen so how do you solve

2870.37 2875.29 that right it's a I don't know if we

2873.04 2877.81 can't reveal this grease but it's a an

2875.29 2880.18 ancient secret passed from generation to

2877.81 2883.69 generation of super engineers and it's

2880.18 2885.1 called double buffering yes sorry I I

2883.69 2887.89 gave it out I'm sorry

2885.1 2892.54 I'm going to return my trimmer engineer

2887.89 2894.76 patch so what you do typically is you

2892.54 2896.77 have instead of only one frame buffer if

2894.76 2898.87 you can afford it you have two three

2896.77 2902.14 buffers of the displayed resolution and

2898.87 2904.42 while you're building your frame with

2902.14 2906.58 the CPU or the GPU on one you are

2904.42 2910.3 displaying the another one on the screen

2906.58 2912.34 and to switch between the frame buffers

2910.3 2915.79 what you do is you wait for a signal

2912.34 2919.03 from the display which is most likely

2915.79 2920.98 the missing signal which indicates that

2919.03 2924.01 the display has started scanning the

2920.98 2926.53 frame buffer so once it started scanning

2924.01 2928.83 the frame buffer it will read from the

2926.53 2932.92 active frame buffer all the pixels and

2928.83 2935.14 the pixels that it has read it will no

2932.92 2938.47 longer be they will no longer be in use

2935.14 2942.37 so that's the moment where when you can

2938.47 2945.64 switch frame buffers and the active one

2942.37 2947.38 becomes the back in the back buffer and

2945.64 2949.12 you can start drawing your new frame

2947.38 2951.49 there when the display that's seeing

2949.12 2955.3 with the front buffer and so this is a

2951.49 2959.86 ping pong buffer system where

2955.3 2962.59 when ping is activated is in use by the

2959.86 2965.56 LCD you write to the pong buffer and

2962.59 2967.6 then you wait for the signal to say to

2965.56 2968.98 swap and then the pong buffer is being

2967.6 2972.13 used by the LCD and you write to the

2968.98 2974.49 ping buffer yes and if you've got to

2972.13 2977.23 just play with an embedded frame buffer

2974.49 2979.0 usually they only have enough on there

2977.23 2980.5 for one frame right they don't have

2979.0 2983.46 double buffering so you might have to

2980.5 2985.9 add at least another buffer in your RAM

2983.46 2987.82 well how does that work sometimes you

2985.9 2990.64 can use you you can't always read out

2987.82 2992.92 the LCDs frame buffer that's usually

2990.64 2994.84 kind of exciting too

2992.92 2997.51 and so you have to keep a shadow of what

2994.84 3000.21 they write right it's usually very slow

2997.51 3003.75 to read the frame buffer in the display

3000.21 3005.97 itself so when the reason comes you send

3003.75 3009.33 the active frame buffer in a one-way

3005.97 3010.71 mode and start working with the

3009.33 3013.92 information that you had on that frame

3010.71 3016.83 buffer then there are tricks if your

3013.92 3020.22 performance is not enough hour you don't

3016.83 3022.65 have enough memory space for two frame

3020.22 3024.84 buffers you do like partial updates of

3022.65 3028.17 different buffers so you try to minimize

3024.84 3031.92 the amount of pixels that you change and

3028.17 3034.65 then maybe you can get it fast enough to

3031.92 3036.69 draw the frame rate that you want to

3034.65 3039.75 draw out maybe not 60 Hertz but maybe

3036.69 3042.57 thirty and without seeing the

3039.75 3044.97 disturbances of the screen do you have

3042.57 3051.54 any test methodologies when I had to do

3044.97 3054.51 LCD graphics system I found later that I

3051.54 3058.35 wished I had better unit tests to start

3054.51 3061.56 with involving lines and squares and do

3058.35 3063.45 you have a good way to figure out if you

3061.56 3066.65 have written your graphic system

3063.45 3071.13 correctly it's very hard to test I I

3066.65 3075.53 wish I had a solution for that usually

3071.13 3079.91 graphics have some form of user input

3075.53 3085.14 involvement so yeah there are dinner

3079.91 3088.44 thankfully import ways of testing things

3085.14 3089.4 but and I I couldn't of volunteer a

3088.44 3091.499 solution

3089.4 3094.489 now usually you accumulate a series of

3091.499 3097.169 visual tests and you can run through it

3094.489 3099.869 it's basically recordings of all of the

3097.169 3101.88 errors that you have had to deal with I

3099.869 3104.459 mean you start out with this is what I

3101.88 3105.839 think you know this test this

3104.459 3108.479 functionality and it looks good

3105.839 3112.169 but you forget some corner case or

3108.479 3114.15 usually it's an actual corner exactly so

3112.169 3115.739 you had update the test and so you end

3114.15 3119.16 up with a suite of things that you can

3115.739 3121.679 do but like Gabrielle said it's very

3119.16 3124.14 hard to automate that because it's a

3121.679 3126.119 visual thing so I mean you can kind of

3124.14 3129.479 take screenshots and compare them

3126.119 3131.999 against known good results but that's

3129.479 3135.719 all very painful yeah it's a tough

3131.999 3139.459 problem I remember writing the word red

3135.719 3142.14 and green and blue in each color and

3139.459 3144.809 then realizing I hadn't written them in

3142.14 3148.669 the correct colors because I wasn't sure

3144.809 3151.739 which was orangey and B on my display

3148.669 3155.519 but that's a classic problem mixing up

3151.739 3157.259 the components orders yeah yeah when you

3155.519 3158.64 have black and white which a lot of

3157.259 3160.409 times you start out with black and white

3158.64 3163.499 it doesn't matter but then when you

3160.409 3165.719 start doing animations for your team

3163.499 3167.88 suddenly it's important that red is red

3165.719 3170.159 and not green well here's a question for

3167.88 3172.829 you that the folks on the Select might

3170.159 3174.809 have asked but they didn't there's a lot

3172.829 3177.479 of different display technologies out

3174.809 3179.4 right now and if your decide if you're

3177.479 3182.819 building a hobby project or starting

3179.4 3185.009 some small product it might not be clear

3182.819 3189.929 what the best thing to choose is there's

3185.009 3193.739 there's OLED there's LCD there's other

3189.929 3196.14 things matrix lights are actually pretty

3193.739 3200.479 popular right now Inc and there's

3196.14 3200.479 there's drawbacks to all of these right

3201.079 3207.299 to list the tropics yeah yeah the

3204.419 3210.299 drawbacks of OLED because that may be

3207.299 3213.679 important to me soon oh that's a yeah

3210.299 3215.219 that's a pet peeve of mine so let's type

3213.679 3218.13 in time

3215.219 3221.069 they're like little gnomes that emit

3218.13 3222.98 light and they get older and older each

3221.069 3226.23 time you make them make

3222.98 3227.819 photos and the more you make them emit

3226.23 3232.29 photons the more they die the more

3227.819 3234.329 quickly they die so yeah that's a fun

3232.29 3236.49 fact that I wasn't aware of when I

3234.329 3238.17 started working with all it this place

3236.49 3241.23 and people I could choose them because

3238.17 3243.41 they're super bright and and you know

3241.23 3246.3 the monochrome ones look really really

3243.41 3250.069 engaging but really we're just killing

3246.3 3254.28 little-known murdering yes that's

3250.069 3258.15 scientifically proven - yeah in a

3254.28 3263.94 microscope just enable kamikaze mode and

3258.15 3265.349 you'll see they're very bright but the

3263.94 3267.78 nice thing about all that is you don't

3265.349 3269.4 draw a power your power draw is

3267.78 3272.13 proportional to how many pixels you're

3269.4 3275.869 actually lighting right yeah so each

3272.13 3280.5 each so each pixel is like an individual

3275.869 3281.79 light instead of being the LCD system

3280.5 3284.88 where you have a backlight and you're

3281.79 3289.619 basically filtering the backlight to

3284.88 3291.359 produce colors so the contrast is the

3289.619 3293.49 contrast appearance is much nicer

3291.359 3296.49 because the black is really black this

3293.49 3300.45 there's no light coming what the black

3296.49 3305.18 pixels and then color I've heard the

3300.45 3310.28 gnomes die at different rates yeah blue

3305.18 3313.74 dice especially fast not sure why

3310.28 3317.43 they're probably much larger because we

3313.74 3320.97 perceive blue with lower intensity so to

3317.43 3323.73 produce the same perceived blue-green

3320.97 3327.51 for example brightness the the blue one

3323.73 3329.22 needs to make much more effort my story

3327.51 3330.51 is that we haven't had blue LEDs for

3329.22 3334.609 that long so we're just not really good

3330.51 3337.8 at making them yeah that's true

3334.609 3340.88 or maybe the other pixels don't like

3337.8 3345.66 blue yeah those no hate theater no yeah

3340.88 3349.41 so yeah so so they give you these curves

3345.66 3352.319 and they say if your Sultanate's

3349.41 3354.93 this display can live for 100 hours and

3352.319 3358.2 then what you get is a

3354.93 3361.2 a pixel that doesn't isn't able to

3358.2 3363.2 emitter at its fullest and depending on

3361.2 3367.14 what you're showing screen you can get

3363.2 3369.18 burning a burning effect which is an

3367.14 3371.28 image that seems to be constantly there

3369.18 3376.23 and that's produced by the lack of the

3371.28 3378.089 pixels to do a bit light at the same

3376.23 3380.839 level that the neighboring pixels can

3378.089 3385.41 with it I mean that that wouldn't that

3380.839 3390.75 sounds fine not not really not at all

3385.41 3392.67 fine okay so so OLED is see if you

3390.75 3394.859 manage if you manage to get all the

3392.67 3397.47 knobs to die at the same rate that makes

3394.859 3398.369 fine because you won't notice it for for

3397.47 3401.49 very long time

3398.369 3404.49 the problem is when they start dying at

3401.49 3410.45 different rates for me a pattern then

3404.49 3412.97 you really notice them okay so LEDs

3410.45 3417.089 might be an option but those are very

3412.97 3418.23 power inefficient so I guess LCDs those

3417.089 3423.15 are fine they've been around for a long

3418.23 3427.319 time they must work right yeah ago the

3423.15 3431.79 problem is if you if you want to make a

3427.319 3434.549 really nice-looking device with no

3431.79 3437.22 borders around it it's very hard to do

3434.549 3440.609 with LCD because they require a plodding

3437.22 3443.819 area somewhere so you get that if you

3440.609 3445.95 look at wearable devices with LCDs you'd

3443.819 3449.28 see that some where they may be

3445.95 3451.71 advertised a ride over on a region

3449.28 3454.2 because they cannot avoid having that

3451.71 3458.46 section then it has the backlight issue

3454.2 3461.04 you have to there's all very few LCDs

3458.46 3463.349 that you can see that they have trans

3461.04 3465.75 reflective one switch light coming into

3463.349 3467.67 it is reflected off a substrate on the

3465.75 3469.68 back and then and then you can see it

3467.67 3472.26 daylight but usually you have to have

3469.68 3475.02 some sort of light emitting thing on the

3472.26 3477.48 back and that's usually some white LEDs

3475.02 3480.75 or some phosphorescent thing fluorescent

3477.48 3485.69 thing which draws a lot of power so I

3480.75 3488.339 should use ink you should use beeps

3485.69 3489.78 Morse code I do feel like we're gonna

3488.339 3494.13 get down to like you just shouldn't have

3489.78 3496.47 it display at all you can avoid it it's

3494.13 3502.98 a big part of the power budget if you

3496.47 3504.69 want the display just watch the TV all

3502.98 3506.13 right do we have more graphics questions

3504.69 3507.27 that was the main one I wanted to go

3506.13 3509.97 back to I don't think we missed an

3507.27 3513.329 analyst well I mean the list is just

3509.97 3517.049 there because I have to do something for

3513.329 3518.809 the show other than talk yeah well I

3517.049 3525.319 have lots of questions for Gabriel but

3518.809 3528.66 he's not going to answer them I think

3525.319 3531.39 I've already gone over the line with a

3528.66 3535.14 double buffer and the nobs thing I don't

3531.39 3537.99 think I should have revealed that okay I

3535.14 3539.339 have one more question for you that when

3537.99 3543.18 you were young when you were the age

3539.339 3546.48 that your sons are now yes what did you

3543.18 3549.299 want to be when you grow up yeah I

3546.48 3553.23 wanted to be an engineer really from

3549.299 3555.299 that young yes so before I wanted to be

3553.23 3559.579 in a chair I actually wanted to be a

3555.299 3563.43 garbage collection man also buy boxes

3559.579 3566.91 but right after that I wanted to be at

3563.43 3570.66 my my my stepdad was a garbage

3566.91 3573.059 collection person and I you know in high

3570.66 3576.65 school I was like oh god don't tell

3573.059 3581.369 anybody to say he drives trucks and I

3576.65 3585.059 found out a few years ago that I was the

3581.369 3586.53 coolest person in the neighborhood to

3585.059 3589.079 the five-year-old who lived across the

3586.53 3591.27 street when he found out that my stepdad

3589.079 3593.7 Drive garbage trucks he was just like

3591.27 3597.39 that was the coolest thing yeah I was

3593.7 3599.28 probably the same yeah but you but you

3597.39 3601.109 knew what an engineer was and you wanted

3599.28 3605.22 to build things at a young age did you

3601.109 3607.02 take things apart my Iancu was an

3605.22 3609.72 electronics is an electronics engineer

3607.02 3612.45 so I guess that's what I picked that up

3609.72 3615.049 from yeah I absolutely was hated by my

3612.45 3619.049 brothers I constantly took apart toys

3615.049 3620.52 and I never put them back together no

3619.049 3623.4 once you know how they work they don't

3620.52 3625.29 who cares yeah my mom says that I went

3623.4 3632.1 to the University so I could learn how

3625.29 3634.35 to put the toys well I think we've kept

3632.1 3635.61 you for long enough Gabrielle do you

3634.35 3638.16 have any thoughts you'd like to leave us

3635.61 3641.76 with yes I'd like to read you a quote

3638.16 3643.98 one of my favorite it says it's from

3641.76 3645.63 Douglas Adams from mostly harmless and

3643.98 3647.22 it says a common mistake that people

3645.63 3649.53 make when trying to design something

3647.22 3655.52 completely foolproof is to underestimate

3649.53 3659.55 the ingenuity of concrete faults yes a

3655.52 3662.61 lesson to live by yeah I guess it has

3659.55 3664.65 been Gabrielle Okubo software

3662.61 3668.04 electronics and systems engineer at

3664.65 3670.14 large you can contact him via Twitter

3668.04 3671.79 via his webpage which will of course be

3670.14 3674.28 in the show notes or you can email us

3671.79 3675.86 and we will forward it along thank you

3674.28 3677.16 so much for being with us Gabrielle

3675.86 3680.91 thank you

3677.16 3682.41 it's been very nice being here thank you

3680.91 3684.36 to Christopher for producing and

3682.41 3685.05 co-hosting and of course thank you for

3684.36 3687.18 listening

3685.05 3689.4 you can always contact us at show at

3687.18 3691.59 embedded FM or hit the contact link on

3689.4 3695.85 the embedded FM website where you can

3691.59 3698.4 also find at the blog and now a quote to

3695.85 3702.35 leave you with a from a jorge luis

3698.4 3705.21 borges plant your own gardens and

3702.35 3708.77 decorate your own soul instead of

3705.21 3708.77 waiting for someone to bring you flowers

3709.609 3714.0 embedded is an independently produced

3711.9 3716.52 radio show that focuses on the many

3714.0 3718.38 aspects of engineering it is a

3716.52 3720.29 production of logical elegance an

3718.38 3723.0 embedded software consulting company in

3720.29 3725.25 California if there are advertisements

3723.0 3727.77 in the show we did not put them there

3725.25 3730.35 and do not receive money from them at

3727.77 3734.22 this time our sponsors are logical

3730.35 3736.28 elegance and listeners like you

3734.22 3736.28 you

set(['saves', 'four', 'Buenos', 'hate', 'stepdad', 'forget', 'relationships', "Apple's", 'buddy', 'redrawing', 'SPL', 'swap', 'sorry', 'worth', "shouldn't", 'updated', 'risk', 'misunderstanding', 'every', 'updates', 'uncertain', "we'll", 'internally', 'open-source', 'companies', 'solution', 'vector', 'enjoy', 'coordinate', 'phones', 'consistent', 'direct', 'second', 'street', 'specs', 'blue', 'errors', 'specification', 'contributed', 'lights', 'Amazon', 'above', 'CRTs', 'new', 'tips', 'Raspberry', 'widget', 'never', 'drew', 'met', 'protection', 'active', 'path', '100', 'Plata', 'changed', 'recordings', 'settled', 'magically', 'total', 'unit', 'Star', 'would', 'call', 'type', 'tell', 'aware', 'warn', 'phone', 'aligned', 'must', 'shoot', 'word', 'work', 'movies', 'install', 'my', 'example', 'give', 'JavaScript', 'implementations', 'indicates', 'want', 'feasible', 'guarantee', 'end', 'LA', 'provide', 'travel', 'how', 'amazing', 'answer', 'abstraction', 'description', 'mess', 'earlier', 'lab', 'customs', 'mesh', 'types', 'complexity', 'sons', 'green', 'phrased', 'suggest', 'realizing', 'office', 'over', 'keyboard', 'before', 'somewhere', 'writing', 'better', 'production', '400', 'SAP', 'easier', 'then', 'them', 'school', 'effects', 'they', 'one', 'brightness', 'fonts', 'API', 'reasonable', 'each', 'went', 'mean', 'series', 'principles', 'freeware', 'sounds', 'network', 'god', 'Wars', 'laid', 'got', 'engineer', 'grease', 'resume', 'u.s.', 'little', 'free', 'sheet', 'wanted', 'publication', 'messages', 'days', 'moving', 'already', 'render', 'another', 'payload', 'service', 'top', 'rates', 'too', 'B', 'tool', 'took', 'older', 'iteration', 'likely', 'project', 'matter', 'flame', 'feeling', 'sees', 'ran', 'mine', 'talking', 'seen', 'seem', 'dozen', 'hub', 'concrete', 'firmware', '-', 'elegance', 'oriented', 'contact', 'doors', 'transmit', 'shipments', 'even', 'nobody', 'though', 'involving', 'plenty', 'QT', 'doc', 'alarm', 'metal', 'definitely', 'came', 'nice-looking', 'saying', 'colors', 'radio', 'solutions', 'availability', 'flowers', 'implementation', 'Visual', 'cross-platform', "here's", 'folks', 'do', 'stop', 'fluid', 'coast', 'despite', 'onboard', 'runs', 'countries', 'patch', 'bad', 'architecture', 'respond', 'DMA', 'reference', 'testing', 'depends', 'extraordinarily', 'Android', 'best', 'subject', 'said', 'draws', 'publish/subscribe', 'lots', 'away', 'web', "there's", 'simplest', 'preserve', 'Trek', 'terms', 'nature', 'Osiris', 'here', 'extent', 'received', 'essentially', 'beeps', 'heating', 'against', 'games', 'asked', 'tough', 'written', '256', 'conference', 'tcp/ip', "I've", 'regenerate', 'three', 'been', 'quickly', 'much', 'containers', 'website', 'life', 'Adams', 'personally', 'worked', 'Co', 'blue-green', 'ugly', 'near', 'neat', 'mistake', 'is', 'it', 'in', 'mouse', 'if', 'Python', 'slab', 'make', 'Oh', 'complex', 'showing', 'fairly', 'VP', 'VR', 'animations', 'opportunity', 'thoughts', 'kept', 'changes', 'client', 'alarms', 'the', 'protocol', 'just', 'bandwidth', 'thanks', 'human', 'yep', 'yes', 'borges', 'IOT', 'had', 'easy', 'has', 'gave', 'Gabriel', 'breaks', 'microcontroller', 'possible', 'boxes', 'background', 'shadow', 'designers', 'apart', 'Playstation', '50', 'specific', 'MQTT', 'offices', 'mosquito', 'security', 'right', 'old', 'deal', 'people', 'somehow', 'oh', 'multiple', 'advertise', 'for', 'contributing', 'everything', 'Chris', 'knew', 'peel', 'super', 'plug', 'constituting', 'dinner', 'automatically', 'consulting', 'thermostat', 'presence', 'down', 'rendering', 'direct3d', 'compression', 'support', 'constantly', 'stuck', 'way', 'overhead', 'was', 'head', 'form', 'differences', 'ADF', 'emulates', 'true', 'analyst', "NDA's", 'devices', 'decorate', 'emit', 'computing', 'abstract', 'proven', 'mostly', 'ship', 'check', 'Intel', 'Francisco', 'dying', 'no', 'whereas', 'when', 'setting', 'test', 'developers', 'node', 'kve', 'brothers', 'Windows', 'update', "let's", 'scale', 'transfers', 'longer', 'assume', 'together', 'time', 'stick', 'managed', 'switched', 'dance', 'activated', 'focus', 'manager', 'manages', 'chair', 'displaying', 'layers', 'depend', 'zone', 'graph', 'freelance', 'flash', 'finally', 'me', 'sponsors', 'choice', 'fullest', 'cool', 'oftentimes', 'perceived', 'immediately', 'level', 'did', 'die', 'dig', 'standards', 'leave', 'minimal', 'team', 'round', 'talked', 'says', 'PCP', 'cost', 'port', 'Kickstarter', 'goes', 'supporting', "hadn't", 'along', 'change', 'wait', 'box', 'sending', 'thirty', 'vectors', 'usually', 'decouple', 'Inc', 'gamepad', 'prefer', 'compare', 'logical', 'flavors', 'working', 'prove', 'angry', 'ingenuity', 'visit', 'only', 'live', 'memory', 'Studio', 'today', 'Ben', 'F', 'afford', 'visual', 'ignorant', 'effort', 'graphic', 'soul', 'can', 'growing', 'cortex-m', 'trans', 'heart', 'figure', 'awesome', "didn't", 'fuck', 'topic', 'heard', 'means', 'ping', 'write', 'Louis', 'map', 'product', 'STA', 'huge', 'may', 'dive', 'produce', 'STP', 'data', 'grow', 'times', 'remember', 'whenever', 'maybe', 'accelerated', 'cannot', 'so', 'talk', 'cute', 'webpage', 'displayed', 'years', 'brain', 'cuts', 'still', 'blocked', 'thank', 'internationally', "he's", 'interesting', 'platform', 'window', 'main', 'processes', 'scaling', 'transmissions', 'half', 'not', 'now', 'maintaining', 'name', 'yeah', 'challenges', 'avoided', 'space', 'exploding', 'Aires', 'statically', '[Laughter]', 'squares', 'correct', 'after', 'mechanisms', 'quite', 'OpenOffice', 'complicated', 'besides', 'card', 'care', 'language', 'thing', 'place', 'think', 'first', 'Brazil', 'Hertz', 'yourself', 'fast', 'directly', 'impossible', 'array', 'open', 'tomorrow', 'size', 'city', 'given', 'checked', 'remotely', 'anyone', 'SEO', 'white', 'Data', 'gives', 'inefficient', 'courier', 'that', 'copy', 'than', 'specify', 'TrueType', 'require', 'transferred', 'were', 'and', 'DL', 'nicer', 'say', 'monochrome', 'sells', 'saw', 'any', 'subtopic', 'shocked', 'ideal', 'animation', 'take', 'online', 'performance', 'channel', 'butterfly', 'sure', 'pain', 'buffer', 'price', 'Linux', 'paid', 'pages', 'forever', 'especially', 'later', 'typically', 'show', 'bright', 'corner', 'help', 'slow', 'ratio', 'dice', 'enough', 'tears', 'going', 'black', 'directed', 'get', 'assistant', 'employers', 'nobs', 'tailor', 'reveal', 'artist', 'communicates', 'where', 'worrying', 'husband', 'physically', 'Hauer', 'up', 'elected', 'esps', 'satisfying', 'voluntary', 'ways', 'alarming', 'review', 'Okubo', 'outside', 'between', 'import', 'reading', 'across', 'notice', 'jobs', 'screen', 'killing', 'faults', 'emitter', 'concentrate', 'come', 'pixels', 'many', 'region', 'priests', 'quiet', 'loudly', "can't", 'filtering', 'color', 'period', '60', 'grants', "couldn't", 'cares', 'classic', 'mark', 'subscribes', 'reflective', 'borders', 'engine', 'enable', 'shopping', 'thousand', 'photos', 'those', 'sound', 'these', 'consultant', 'single', 'compile', 'expertise', 'coolest', 'Alysia', 'skipped', 'return', 'technology', 'worry', 'binary', 'different', 'develop', 'pay', 'scientifically', 'same', 'underestimate', 'document', 'events', 'week', 'I', 'IP', 'drives', 'running', 'changing', 'totally', 'mentally', 'theater', 'minimize', 'roughly', 'without', 'solve', 'comes', 'components', 'SDL', 'model', 'being', 'money', 'valuable', 'bitmap', 'i/o', 'communities', 'PHP', 'aspect', 'thinking', "we've", 'photons', 'seems', 'desktop', 'blog', '4', 'real', 'hover', 'aspects', 'around', 'easily', 'read', 'gonna', 'formalize', 'mom', 'world', 'server', 'facing', 'either', 'simulator', 'images', 'reasons', 'micro', 'recorded', 'provides', 'business', 'retains', 'communicate', 'broker', 'Drive', 'ratios', 'exciting', 'manufacturer', 'on', 'central', 'stations', 'of', 'favorite', 'ou', 'processor', 'tribe', 'burning', 'image', 'involvement', 'your', 'weight', 'area', 'unmodified', 'there', 'start', 'low', 'lot', 'complete', 'bookstore', 'ended', 'DRAM', 'technologies', 'trying', 'with', "they're", 'embedded', "wasn't", 'message', 'agree', 'expect', 'gone', 'USB', 'certain', 'describe', 'am', 'sales', 'general', 'as', 'reliability', 'at', 'file', 'watched', 'again', 'drivers', 'storage', 'hobbyists', 'you', 'separate', 'hardware', 'important', 'poof', 'building', 'shipping', 'remote', 'assets', 'tricks', 'hello', 'Hardware', 'passed', 'alright', 'resolution', 'all', 'consider', 'lack', 'commute', 'talks', 'plodding', 'referring', 'hunting', 'to', 'program', 'wants', 'nori', 'case', 'HDMI', 'very', "I'd", 'decide', "I'm", 'list', 'large', 'dinosaur', 'small', 'neighborhood', 'ten', 'sync', 'rate', 'design', 'displays', 'investment', 'Elance', 'what', 'clock', 'section', 'version', 'backlight', 'University', 'contrast', 'toes', 'K', 'answers', 'Xbox', 'hours', 'operating', 'publishes', 'ahead', 'amount', 'action', 'murdering', 'via', 'wearables', 'thankfully', 'suddenly', 'Things', 'ask', 'toys', 'gosh', 'establish', 'takes', 'destination', 'two', 'automate', 'more', 'door', 'knows', 'company', 'site', 'basically', 'particular', 'known', 'producing', 'willfully', 'hour', 'del', 'learn', 'SF', 'SD', 'shark', 'numbers', 'sense', 'pong', 'information', 'needs', 'processors', 'plant', 'okay', 'advice', 'variant', 'mapping', 'never-ending', 'pinyon', 'lighting', 'coming', 'horizontal', 'a', 'shortcomings', 'short', 'documentation', 'bugs', 'anytime', 'egl', "that's", 'underscore', "don't", 'soon', 'narratives', 'through', 'its', 'developer', '20', '22', 'actually', 'harmless', 'systems', 'cutie', 'might', "haven't", 'good', 'somebody', 'OLED', 'reflected', 'framework', "you've", 'foot', 'buffering', 'instructions', 'IPC', 'always', 'refresh', '2d', 'tear', 'someone', 'man', 'found', 'notes', "isn't", 'heavy', 'everyone', 'mental', 'accelerator', 'generation', 'house', 'hard', 'idea', 'engaging', 'connect', 'loops', 'operation', 'beyond', 'event', 'buffers', 'really', 'missed', 'foolproof', 'since', 'publish', 'acting', 'equate', 'offline', 'issue', 'guess', 'difficulty', 'reason', 'pitfalls', 'imagine', 'put', 'ES', 'benefits', 'lemur', 'computers', 'FedEx', 'expecting', 'Select', 'feel', 'relate', 'number', 'feet', 'done', 'miss', 'story', 'temperature', 'introduction', 'moderately', 'least', 'pinned', 'vsync', 'architecting', 'scheme', 'store', 'statement', 'relationship', 'behind', 'part', 'kind', 'hundred', 'gotten', 'ATMs', 'toward', 'syncing', 'Douglas', 'orders', 'option', 'depending', 'also', 'internal', 'build', 'knobs', 'play', 'added', 'quote', 'singlet', 'most', 'nothing', 'Wi-Fi', 'windows', 'clear', 'sometimes', 'cover', 'Gabrielle', 'joining', 'disturbances', 'font', 'screenshots', 'find', 'Jakob', 'distributed', 'flights', 'pretty', 'OpenGL', 'his', 'hit', 'cheaper', 'during', 'emails', 'distraction', 'common', 'double', 'x', 'river', 'scanning', 'bars', 'set', 'Morse', 'see', 'individual', 'are', 'close', 'expert', 'movie', 'please', 'libraries', 'myriad', 'probably', 'pictured', 'available', 'recently', 'creating', 'missing', 'initially', 'confiscated', 'last', "wouldn't", 'foreign', 'context', 'long-term', 'whole', 'load', 'liked', 'point', 'simple', 'community', 'expensive', 'create', 'secret', 'California', 'brick', 'meeting', 'treatment', 'lived', 'buck', "what's", 'transferring', 'gas', 'else', 'understand', 'plants', 'handling', 'LCDs', 'look', 'budget', 'evaluated', 'receive', 'while', 'fun', 'loop', 'engineers', 'LEDs', 'pound', 'drawbacks', 'itself', 'uncomment', 'ready', 'funny', 'anymore', 'development', 'used', 'moment', 'uses', 'user', 'aggregate', 'stack', 'euro', 'lower', 'task', 'database', 'accumulate', 'anybody', 'person', 'spend', 'know', 'things', 'responsible', 'listening', 'distracting', 'shape', 'questions', 'Internet', 'startups', 'wearable', 'cut', 'hated', 'workers', 'advertisements', 'cuz', 'source', 'Christopher', 'input', 'glyphs', 'vendor', 'format', 'big', 'couple', 'game', 'bit', 'projects', 'follows', 'signal', 'communications', 'popular', 'OS', 'often', 'absolutely', 'creation', 'some', 'back', 'one-way', 'towards', 'lightning', 'ourselves', 'Channel', 'and/or', 'pet', 'decision', 'integration', 'per', 'slash', 'directmedia', 'be', 'run', 'splatting', '300', 'processing', 'by', 'pipeline', 'anything', 'ordeal', 'extensions', 'Katie', 'seeing', 'letter', 'garbage', 'into', 'within', 'connects', 'patreon', 'proportional', 'lesson', 'behaving', 'question', 'long', "we're", 'forward', 'kamikaze', 'properly', 'link', 'line', "I'll", 'Twitter', "hasn't", 'us', 'called', 'associated', 'engineering', 'Mar', 'TV', 'nah', 'backs', 'application', 'Mac', 'functionality', 'nice', 'draw', 'users', 'prepared', 'resolutions', 'ago', 'independently', 'methodologies', 'age', 'required', 'crease', 'Cloud', 'having', 'once', 'code', 'partial', 'results', 'go', 'contributions', 'CPU', 'issues', 'young', 'send', 'intensive', 'helps', 'stable', 'suite', 'subscription', 'sent', 'wished', 'annika', 'putting', 'llama', 'mixing', 'entire', 'harbor', 'button', "they've", 'try', 'Seattle', 'versioning', 'configurations', 'logistics', "you'd", 'jump', 'picked', 'download', 'odd', 'click', 'power', 'fine', 'access', 'waiting', 'America', 'impact', 'focuses', 'exchange', 'let', 'sink', 'making', 'luis', 'great', 'Chinese', 'technical', 'larger', 'titanic', '35', 'products', 'makes', 'composed', 'app', 'manage', 'scaled', 'Nick', 'composer', 'apply', 'bindings', 'FM', 'use', 'from', 'next', 'few', 'little-known', 'cheeks', 'sort', 'started', 'becomes', 'ok', 'tearing', 'women', 'account', 'this', 'ride', 'clients', 'anywhere', 'control', 'tap', 'speciality', 'process', 'high', 'something', 'instead', 'ABF', 'watch', 'philosophy', 'collection', 'bothered', 'wrist', 'realized', 'light', 'lines', 'robot', 'or', 'tropics', 'produced', "won't", 'looks', 'bunch', 'RAM', 'him', 'mqtt', 'choose', 'hobby', 'pixel', 'orangey', 'hands', 'front', 'rotation', 'realize', 'kilometres', 'San', 'trimmer', 'mode', 'doing', 'related', 'Peapod', 'static', 'our', 'out', 'matrix', 'microscope', 'STL', 'electronics', 'supports', 'red', 'QoS', 'completely', 'interaction', 'peeve', 'could', 'keep', 'automatable', 'retain', 'south', 'quality', "doesn't", 'ancient', 'esp8266', 'revealed', 'system', 'their', 'perfectly', 'painful', 'gas-station', 'exactly', 'updating', 'slack', 'pointers', 'bed', 'listeners', 'abstracts', 'Diego', 'Richard', 'curves', 'have', 'need', 'Iancu', 'sings', 'documents', 'mappings', 'able', 'switch', 'mechanism', 'issuing', 'which', 'techniques', 'unless', 'who', 'jorge', 'connected', 'device', 'why', 'neighboring', 'face', "you'll", 'H', 'fact', 'text', 'bring', 'greenhouse', 'trivial', 'based', 'micros', 'should', 'buttons', 'emitting', 'regularly', 'handle', 'watching', 'familiar', 'lucky', 'bear', 'listener', 'ones', 'words', 'timing', 'GPU', 'chips', 'evolution', 'substrate', 'trucks', 'course', 'stuff', 'tightening', 'view', 'exists', 'acquired', 'frame', 'we', 'intensity', 'computer', 'Pi', 'pattern', 'state', 'correctly', 'horrible', 'progress', 'email', 'gnomes', 'key', 'problem', '[Music]', 'limits', 'taking', 'acknowledge', 'etc', 'LCD', 'walk', 'subscribe', 'addition', "it's", 'co-hosting', 'feather', 'phosphorescent', "it'd", 'interrupts', 'controller', 'graphics', 'an', 'present', 'volunteer', 'appearance', 'will', 'layer', 'surprisingly', 'helped', 'productivity', 'perhaps', 'cross', 'strange', 'gets', 'difficult', 'effect', 'automation', 'fierce', 'obstructs', 'off', 'center', 'well', 'thought', 'displacing', 'sets', 'drawing', 'stores', 'sourced', 'five-year-old', 'batteries', 'mistakes', 'tessellate', 'advertised', 'Argentina', 'documented', 'Bistro', 'bitmaps', 'battery', 'add', 'oDesk', 'match', 'tests', 'crux', 'five', 'whatever', 'press', 'Ethernet', 'super-secret', 'like', 'controllers', 'become', 'works', 'replacement', 'because', 'library', 'hair', 'platforms', 'daylight', 'home', 'recognition', 'happens', 'competitor', 'avoid', 'does', 'fluorescent', 'simpler', 'about', 'actual', 'getting', 'US', 'UI', 'software', 'own', 'letters', 'artists', 'utility', 'networking', 'artifacts', 'transfer', 'perceive', 'function', 'buy', 'bus', 'but', 'hi', 'he', 'made', 'whether', 'wish', 'smooth', 'below', 'limit', 'distribution', 'piece', 'minutes', 'display', 'mechanics', 'contribute', 'ink', 'functions', 'compared', 'variety', '40', 'lately', 'other', 'details', "you're", 'kinds', 'stay', 'friends', 'South', "Sultanate's", 'using', 'starting', 'Spanish', 'GPUs', 'gardens'])
