capscan.py: fekerr 20180909-20180911
Simple python script to scan YouTube .SBV captions files.
Usage: capscan <caption.sbv> [werdz.txt]

Arguments on command line: 3 :
./capscan.py
254_captions.sbv
werdz254.txt
Attempting very simple open of sys.argv[1]= 254_captions.sbv
<open file '254_captions.sbv', mode 'r' at 0x7f68a15c55d0>
00003.640, 11.660000 [Music]
00006.160, 14.900000 hello this is embedded I am Alysia white
00011.660, 18.109000 here with Christopher white when I say
00014.900, 21.279000 graphics do you assume I mean a big game
00018.109, 24.679000 computer what about in embedded systems
00021.279, 28.089000 this week we'll be talking to Gabrielle
00024.679, 31.640000 Jakob Oh about embedded graphics and
00028.089, 32.239000 mqtt home automation have real thanks
00031.640, 35.780000 for joining us
00032.239, 38.780000 hi crease another yeah that's going good
00035.780, 40.250000 I know you have worked at some company
00038.780, 44.329000 we're not going to talk about with my
00040.250, 46.280000 husband but how about you give us an
00044.329, 49.280000 introduction of yourself as though you
00046.280, 52.640000 were meeting us for the first time at a
00049.280, 55.670000 technical conference all right my name
00052.640, 59.179000 is Gabriel or Gabrielle in Spanish I'm
00055.670, 63.440000 an electronics engineer and I typically
00059.179, 66.410000 work remotely with US companies usually
00063.440, 69.470000 in software or firmware development and
00066.410, 73.580000 lately I've been working for graphics
00069.470, 82.850000 and systems engineering I thought he
00073.580, 84.260000 would go on for longer I well let's do
00082.850, 87.080000 lightning round and we will dig into
00084.260, 89.180000 more because despite your short
00087.080, 92.330000 introduction you have done many
00089.180, 94.160000 interesting things so lightning round we
00092.330, 97.100000 asked you short questions we want short
00094.160, 99.260000 answers and if we were behaving
00097.100, 101.81000 ourselves we won't ask you why and how
00099.260, 106.70000 and hi and all of that Christopher you
00101.810, 109.64000 ready yeah Gabrielle sure let's go Star
00106.700, 114.29000 Wars or Star Trek Star Wars what's the
00109.640, 119.34000 stuff what's your favorite x window
00114.290, 126.29900 manager wait up
00119.340, 128.81900 or Katie what's the I've been using kve
00126.299, 131.56900 constantly for the last ten years I
00128.819, 134.90000 wouldn't change it for anything
00131.569, 138.59900 dinosaur movies are shark movies
00134.900, 141.06000 dinosaur is the Amazon a river a
00138.599, 148.76000 bookstore or a tribe of work fierce
00141.060, 152.57900 women for me it's a bookstore or online
00148.760, 154.68000 shopping destination see ahead a sales
00152.579, 156.00000 platform in that in that question but
00154.680, 158.76000 you just want a statement it's
00156.000, 160.41000 tightening and I'm a little uncertain
00158.760, 162.26900 about your answer because when I asked
00160.410, 164.20900 you about Amazon earlier in the week you
00162.269, 167.04000 said it was a river
00164.209, 169.11000 yeah because Amazon doesn't really have
00167.040, 172.79900 any presence in South America but
00169.110, 177.75000 anytime I go to the US Amazon is there
00172.799, 182.01000 probably the first site IPC what color
00177.750, 186.20900 should a llama be a second what color
00182.010, 189.48000 should a llama be Oh what color so the
00186.209, 192.09000 thing is llama means flame in Spanish so
00189.480, 195.81000 that's why we're talking about it it'd
00192.090, 199.73900 be enough different colors blue is the
00195.810, 202.01900 color of a good flame so I'd go with
00199.739, 205.26000 that do you like to complete one project
00202.019, 207.35900 or start a dozen I'd like to complete
00205.260, 211.68000 one project what I actually do is start
00207.359, 217.06900 at awesome alright that's going to dive
00211.680, 219.98900 into things graphics when you say
00217.069, 222.51000 graphics and I know you've done a lot of
00219.989, 225.20900 different working graphics what do you
00222.510, 226.70900 what is what does that word really mean
00225.209, 231.10900 when you're talking about embedded
00226.709, 233.60900 systems and graphics so graphics means
00231.109, 236.40000 different things to different people for
00233.609, 239.16000 and users it means what probably what
00236.400, 242.73000 they see on screen for designers it
00239.160, 246.09000 means the way they communicate with
00242.730, 249.29900 users and for us for more engineers it's
00246.090, 253.08000 the whole pipeline that goes from assets
00249.299, 257.43000 to some processing the frame buffer and
00253.080, 259.23000 to the pixels of the display it's a
00257.430, 262.16000 little odd because I would never say
00259.230, 265.71000 I've worked in graphics but I have put
00262.160, 268.41000 bitmaps into flash and then gotten them
00265.710, 270.42000 out and put them on the screen yeah
00268.410, 273.60000 should I be saying oh yeah graphics is
00270.420, 275.85000 on my resume so when you did that did
00273.600, 278.76000 you constantly write to the screen
00275.850, 280.71000 did you worry about doing the minimal
00278.760, 282.66000 amount of work possible to preserve
00280.710, 287.52000 battery for example one of that is I
00282.660, 289.80000 think graphics work in a way yeah I did
00287.520, 292.53000 all that and I I actually drew a graph
00289.800, 293.64000 too so it wasn't just splatting things
00292.530, 295.83000 on the screen I had to worry about
00293.640, 296.13000 pixels yeah I could put that on your
00295.830, 299.01000 resume
00296.130, 302.60000 okay graphics right it's graphics
00299.010, 305.25000 essentially graphics is usually
00302.600, 310.05000 expensive for batteries so for embedded
00305.250, 312.36000 work anything that saves you on drawing
00310.050, 314.34000 time on redrawing things that you don't
00312.360, 316.71000 need to draw even if you're just like
00314.340, 318.87000 moving assets from the flash to the
00316.710, 321.48000 display that's a fairly complicated
00318.870, 324.54000 process and definitely worth putting in
00321.480, 330.48000 your wrist could you go through the
00324.540, 332.43000 process for us so the center of the
00330.480, 336.27000 graphics process is what's called a
00332.430, 339.84000 frame buffer which is a complicated work
00336.270, 343.32000 for an array in memory a buffer where
00339.840, 345.30000 the pixel information is going to be and
00343.320, 349.56000 it's going to be sent to the display
00345.300, 353.37000 through some mechanism the assets
00349.560, 355.80000 typically come from a flash storage SD
00353.370, 358.08000 card depending on the resolution it's
00355.800, 361.89000 the type of storage that we're going to
00358.080, 365.61000 have there's going to be some sort of
00361.890, 368.04000 DMA transfer from the storage to RAM
00365.610, 370.08000 memory or even directly to the frame
00368.040, 373.11000 buffer and then there's going to be some
00370.080, 375.54000 processing than either by the CPU in
00373.110, 378.57000 what's called software rendering or by a
00375.540, 381.27000 GPU in what's typically called hardware
00378.570, 383.72900 accelerated rendering and then that
00381.270, 386.22000 frame buffer is composed into a frame
00383.729, 387.41000 and that gets sent to the display at a
00386.220, 390.80000 certain time
00387.410, 393.86000 the timing of sending images from the
00390.800, 396.77000 frame buffer to the display has a little
00393.860, 399.71000 bit of complexity because the display is
00396.770, 401.39000 doing it something and the CPU is doing
00399.710, 403.82000 its own thing and if you don't
00401.390, 406.37000 coordinate that properly you end up
00403.820, 408.80000 seeing strange artifacts on screen which
00406.370, 412.10000 you don't want and that depends on how
00408.800, 413.15000 much complexity you have in the in the
00412.100, 415.79000 thing you're displaying if you're doing
00413.150, 417.38000 something very static then usually don't
00415.790, 420.29000 worry about that but if you have a lot
00417.380, 422.18000 of animation or changing data or numbers
00420.290, 424.28000 then then you get into the complexity of
00422.180, 427.46000 oh I don't want to update the screen
00424.280, 428.81000 while I'm still updating the data and
00427.460, 432.56000 I'm put that I want to put on it for the
00428.810, 434.87000 next update exactly and that it seems
00432.560, 437.21000 you have a frame buffer on your LCD and
00434.870, 440.56000 the micro isn't asked acting as frame
00437.210, 445.43000 buffer and having to send things every
00440.560, 447.92000 update yeah so this place typically work
00445.430, 451.10000 in one of two configurations the
00447.920, 453.35000 simplest one I afford the display is
00451.100, 457.10000 basically a mode that emulates what all
00453.350, 460.25000 CRTs display did which is you have a see
00457.100, 463.16000 every sync signal and H horizontal sync
00460.250, 464.66000 signal and pixels and you send stuff to
00463.160, 468.26000 the screen and that gets reflected
00464.660, 472.25000 immediately into pixel information and
00468.260, 474.67000 then an evolution of that is this place
00472.250, 478.34000 with graphics ran on them where the
00474.670, 480.41000 microcontroller can send information at
00478.340, 482.96000 a given time and then that gets
00480.410, 486.23000 displayed to pixels after a certain
00482.960, 488.93000 refresh period yes if your data sheet
00486.230, 492.44000 says you have to use H sink in vsync run
00488.930, 494.39000 away run away very quickly oh well I
00492.440, 498.29000 mean you have to often cuz it's cheaper
00494.390, 501.56000 but it is a lot simpler in the code to
00498.290, 503.54000 have something that has onboard RAM but
00501.560, 505.07000 you pay for it in your processor because
00503.540, 507.35000 you know your processor is doing all of
00505.070, 511.04000 that everyone knows that freeware is
00507.350, 514.21900 free so that's why they're typically
00511.040, 518.63000 used to exchange our complexity for free
00514.219, 520.31000 or complexity so that's all how you
00518.630, 522.89000 would deal with like a bear
00520.310, 524.15000 metal system but you worked on this
00522.890, 527.69000 thing what's it called
00524.150, 529.64000 SDL simple directmedia layer which of
00527.690, 533.99000 course I mean it has the word simple in
00529.640, 538.01000 it so it should be simple right that's a
00533.990, 539.06000 it's a nothing but it's it's it's simple
00538.010, 540.86000 for the user
00539.060, 544.69000 it's quite simple for the user actually
00540.860, 547.49000 it's not simple in its implementation
00544.690, 549.47000 what is it but is it first like if
00547.490, 551.72000 nobody if somebody hasn't heard of it or
00549.470, 555.17000 what it what is this little description
00551.720, 557.83900 so let's say let's let's start with the
00555.170, 561.29000 simplest case right you have a frame
00557.839, 565.10000 buffer on our toes and you create your
00561.290, 570.02000 rendering engine right so you tailor
00565.100, 572.93000 everything to you tailor everything for
00570.020, 576.14000 that artists your whole rendering
00572.930, 577.64000 pipeline is oriented towards having just
00576.140, 580.37000 one frame buffer that you can't directly
00577.640, 582.83000 access and everything works nice your
00580.370, 585.80000 input comes from from interrupts or
00582.830, 589.55000 whatever then imagine that you want to
00585.800, 591.68000 port that to with a minimal effort to I
00589.550, 595.04000 don't know a desktop simulator on
00591.680, 596.69000 Windows or Mac then all your rendering
00595.040, 600.29000 functions basically stop working because
00596.690, 603.37000 Windows uses its own API for rendering
00600.290, 608.62000 and for window creation and for input
00603.370, 612.31000 for events etc and Mac uses a different
00608.620, 615.50000 scheme Linux this is a different scheme
00612.310, 618.50000 Android doesn't even have a main loop
00615.500, 621.68000 that you can use so what SDL does is
00618.500, 627.02000 abstract all of that into a single API
00621.680, 629.20900 slash application philosophy so instead
00627.020, 631.49000 of having to worry about how you create
00629.209, 634.45900 window a window on windows some
00631.490, 637.43000 background Linux you create you call SPL
00634.459, 640.31000 underscore create window and everything
00637.430, 642.83000 is magically so internally you don't
00640.310, 646.49000 need to worry about how the main loops
00642.830, 649.22000 of the OS work you don't need to worry
00646.490, 652.04000 about how to read the keyboard or the
00649.220, 653.82000 gamepad or the mouse everything comes as
00652.040, 656.52000 events in this
00653.820, 658.56000 way across all platforms so it's
00656.520, 665.73000 basically a harbor and always
00658.560, 669.62000 abstraction like yeah cutie cute to some
00665.730, 672.27000 extent but cute is much more it's it's
00669.620, 675.36000 it's more of an app of total application
00672.270, 677.31000 framework so it has networking and all
00675.360, 679.86000 kinds of stuff language extensions
00677.310, 684.54000 whereas this is this isn't see it's more
00679.860, 688.38000 directed toward input and graphics do I
00684.540, 691.08000 have that right so yeah so I don't know
00688.380, 693.60000 how cutie obstructs platforms internally
00691.080, 695.94000 but you could have for example cutie a
00693.600, 698.01000 port that works on top of 50 STL if you
00695.940, 700.83000 want it like STL provides the per
00698.010, 704.52000 minimal layer to abstract window
00700.830, 707.10000 creation input OpenGL context creation
00704.520, 710.43000 and that's it QT provides a whole bunch
00707.100, 713.76000 of other stuff okay
00710.430, 720.15000 how do these relate to like OpenGL and
00713.760, 723.33000 direct3d so after you create a window if
00720.150, 726.12000 you want to render using GPU you need
00723.330, 728.40000 something that's called an OpenGL
00726.120, 730.80000 context which is basically a way to
00728.400, 732.90000 reference what you're doing for the hard
00730.800, 736.86000 work to know that you are the one
00732.900, 740.91000 issuing instructions and you which text
00736.860, 743.36000 or euro you own etc so the way you do
00740.910, 747.06000 that is different on each platform
00743.360, 749.46000 creating an opportunity is not really
00747.060, 752.67000 part of the OpenGL specification but a
00749.460, 755.64000 part of the window manager slash OpenGL
00752.670, 760.05000 integration so as DL abstracts all of
00755.640, 760.68000 these and it manages the windows way of
00760.050, 762.72000 doing it
00760.680, 765.63000 the egl way of doing it the back way of
00762.720, 767.85000 doing it and you just have to call SPL
00765.630, 770.01000 chair clear context or whatever it's
00767.850, 772.32000 called and you get a context and don't
00770.010, 777.00000 have to worry about any of the internal
00772.320, 779.16000 details and it also has a neat way to on
00777.000, 781.53000 up in OpenGL you need to load the
00779.160, 784.50000 function pointers from the library if
00781.530, 786.63000 you don't want to make statically and it
00784.500, 787.64900 helps you with that as well it's not the
00786.630, 792.44900 only library that does
00787.649, 798.14900 this but it's it's a nice utility that
00792.449, 800.85000 provides how does all of this so I know
00798.149, 802.88900 you're an expert in STL because I know
00800.850, 807.50900 you've contributed to it it's an open
00802.889, 815.02900 source project how does this relate to
00807.509, 817.61000 embedded systems it doesn't so STL
00815.029, 820.76900 doesn't really have support for
00817.610, 823.13900 narratives right so if we equate
00820.769, 825.52900 embedded systems to having an artists or
00823.139, 829.11000 not having an artist at all
00825.529, 832.29000 STL doesn't really apply here but there
00829.110, 835.35000 are a growing number of small wearables
00832.290, 838.29000 that use Linux and if you want to for
00835.350, 840.95900 example develop an app and not have to
00838.290, 841.47000 download it constantly to the device to
00840.959, 844.98000 try it
00841.470, 848.32900 you can develop an SPL app you try it on
00844.980, 851.61000 the desktop you use the OpenGL ES
00848.329, 854.67000 graphics stack and what you see on the
00851.610, 856.52900 desktop is going to be exactly or very
00854.670, 859.80000 close to what you see on the device and
00856.529, 861.50000 so that cuts down development time by a
00859.800, 866.61000 lot
00861.500, 870.93000 and there are many devices doing Linux
00866.610, 873.69000 embedded yeah if I wanted to have
00870.930, 877.53000 something that was doing Linux and was
00873.690, 880.71000 making graphics I mean I guess you know
00877.530, 883.08000 when I do embedded Linux I just plug in
00880.710, 887.34000 an HDMI screen and it all just kind of
00883.080, 894.00000 works but that's not that's not what
00887.340, 897.39000 you're talking about let's say can we
00894.000, 900.45000 consider the Raspberry Pi platform yes
00897.390, 902.76000 yeah okay so let's say you want to
00900.450, 904.83000 develop for Raspberry Pi and you don't
00902.760, 908.34000 want to compile everything on device
00904.830, 910.92000 because it takes forever yeah yeah so
00908.340, 913.47000 you cross compile and then once you
00910.920, 916.59000 cross compile you have to download it to
00913.470, 920.55000 the Raspberry Pi try it run it try it
00916.590, 922.86000 with the whatever input you've managed
00920.550, 926.00000 to connect to the Raspberry Pi and see
00922.860, 928.74000 what it looks like or what you can do is
00926.000, 930.12000 that what's basically that same app on
00928.740, 933.12000 your desktop
00930.120, 936.09000 peel it right there mess around with the
00933.120, 939.21000 UI as much as you want and once you're
00936.090, 941.25000 settled with that you know that STL is
00939.210, 942.78000 going to abstract most of the
00941.250, 944.97000 differences in Hauer
00942.780, 947.70000 because your desktop has a different GPU
00944.970, 952.68000 and it probably has a different
00947.700, 955.08000 resolution etc and so you try you send
00952.680, 957.63000 that which is basically there's pretty
00955.080, 961.71000 much the same code pinned it on top of
00957.630, 966.15000 STL and OpenGL ES and that should run on
00961.710, 969.48000 the Raspberry Pi mostly unmodified so
00966.150, 971.22000 it's it this doesn't mean that you
00969.480, 973.08000 cannot develop on the Raspberry Pi
00971.220, 975.36000 directly or that you shouldn't
00973.080, 978.15000 it is saves time if especially if you're
00975.360, 981.87000 doing a complex project it's also nice
00978.150, 984.39000 to be able to give a simulator to your
00981.870, 987.60000 designers and say well this is what it's
00984.390, 988.86000 gonna look like on the thing and then
00987.600, 992.40000 you don't care if the designers are
00988.860, 995.41000 using Mac or Windows or Linux and you
00992.400, 998.56000 still get a reasonable fuck
00995.410, 1001.7400 of what their version of graphics is
00998.560, 1005.8500 gonna look like on the embedded version
01001.740, 1008.3100 of graphics on the device yes and if for
01005.850, 1011.1900 example tomorrow competitor to the
01008.310, 1013.3500 Raspberry Pi show SAP and the software
01011.190, 1017.5500 stack that they provide doesn't have a
01013.350, 1020.1300 window manager but it has direct
01017.550, 1024.2090 hardware access for example most of the
01020.130, 1026.7300 event the GPUs have that so SDL supports
01024.209, 1029.6700 Peapod these GPUs directly and it can
01026.730, 1031.8600 create windows on the directly without
01029.670, 1034.6790 having to go through a window manager so
01031.860, 1036.9290 you your code runs on that it's a
01034.679, 1039.1200 different view it if a whole different
01036.929, 1041.8800 system and you don't have to change
01039.120, 1044.4000 anything for that to work and of course
01041.880, 1046.8900 if you're doing things like games you
01044.400, 1049.5900 support multiple platforms out of the
01046.890, 1051.3900 box with minimal effort you have an
01049.590, 1052.6790 elected the STA one of the things that
01051.390, 1054.1200 people were saying about it was there's
01052.679, 1057.4800 a game engine I'm like I don't think
01054.120, 1059.9400 that's right but it's not it's not a
01057.480, 1062.1000 game engine it's a it's a platform an OS
01059.940, 1065.7300 abstraction layer you you still have to
01062.100, 1067.9500 make your own engine on top of that but
01065.730, 1070.9800 SEO makes it simpler because you can
01067.950, 1072.6600 make a game engine that is mostly
01070.980, 1076.1700 cross-platform so you don't have to
01072.660, 1078.3900 worry about the display systems the
01076.170, 1082.3500 display and the input and many other
01078.390, 1086.3090 things yes sound as well in addition
01082.350, 1087.8900 today you did a database thing with STL
01086.309, 1090.5400 let me see if I've got this right
01087.890, 1093.1500 community sourced database of game
01090.540, 1094.9800 controller map means to be used with STL
01093.150, 1097.1400 to game controller functionality
01094.980, 1102.9500 I don't think all those words go
01097.140, 1107.0700 together so one of the things that SDL
01102.950, 1110.4290 added quite recently or maybe in the
01107.070, 1112.3500 last four years it's a way to abstract
01110.429, 1114.4500 game controllers so if you look at
01112.350, 1116.0400 different game controllers the most
01114.450, 1118.2600 popular ones are the Xbox and
01116.040, 1120.5700 Playstation ones and then there's a
01118.260, 1122.8200 whole myriad of buttons and things that
01120.570, 1125.0700 if you are a game developer for example
01122.820, 1129.5300 and you want to map all of that variety
01125.070, 1133.9800 to something consistent on your game
01129.530, 1136.9200 you're basically facing a titanic task
01133.980, 1138.6300 because you need to know what what
01136.920, 1141.2400 possible things the user may have in
01138.630, 1144.5400 their home and that they let them to use
01141.240, 1147.3300 on your game and map that somehow to the
01144.540, 1149.2800 game one of the most common solutions is
01147.330, 1150.9290 to have some kind of mapping
01149.280, 1152.8200 functionality in the game where it says
01150.929, 1154.3200 okay press the button to jump and you
01152.820, 1157.9500 press something and then that gets
01154.320, 1163.3200 recorded the database that you're
01157.950, 1166.4600 referring to is a way to formalize on
01163.320, 1170.8800 that so as the else supports mapping of
01166.460, 1173.4900 many controllers to an Xbox controller
01170.880, 1175.2000 format and people around the world have
01173.490, 1176.7300 been contributing those mappings that
01175.200, 1179.7000 they do with the controllers that they
01176.730, 1185.3700 get their hands on and we aggregate all
01179.700, 1187.2900 of that into this database so once when
01185.370, 1191.0700 anyone wants to ship a game and support
01187.290, 1193.6500 a whole bunch of controllers besides the
01191.070, 1196.5000 ones that still supports out of the box
01193.650, 1198.6000 which is fairly minimal amount they load
01196.500, 1200.2500 up this database and they can support I
01198.600, 1204.5700 don't know the last time I checked it
01200.250, 1207.4200 was like 300 computers mentally I have
01204.570, 1210.1500 this pictured as though it was I was
01207.420, 1212.0100 using code composer and switched out the
01210.150, 1215.8200 key bindings to match my Visual Studio
01212.010, 1217.3500 code is that is that a good mental model
01215.820, 1219.6000 or is that yes totally do it okay that's
01217.350, 1220.9800 it that's exactly what it is yes the
01219.600, 1225.4500 mental model of somebody doesn't play
01220.980, 1228.5700 enough games that's true or place with
01225.450, 1233.3700 keyboard and mouse no I had the VR
01228.570, 1235.6790 system and play with my feet so this
01233.370, 1238.2300 database thing and the STL things you do
01235.679, 1243.0900 and it's all open source and how do you
01238.230, 1246.0900 get paid you don't it's it's an
01243.090, 1250.0200 investment basically so the story is
01246.090, 1252.7800 that I started with some friends try to
01250.020, 1254.7900 make a game and to make a game of course
01252.780, 1256.6790 the first thing that they tell you is if
01254.790, 1258.6900 you're making a game don't make your own
01256.679, 1261.7800 nature so what did we do
01258.690, 1262.5900 we started making of course the end the
01261.780, 1264.8700 action was
01262.590, 1267.5090 SDL and I still had a number of
01264.870, 1271.1100 shortcomings that were angry on me so I
01267.509, 1273.4190 start to contribute in there and sings
01271.110, 1276.7200 one singlet to another and ended up
01273.419, 1279.2100 working on company in the u.s. that
01276.720, 1282.9600 basically found me through my open
01279.210, 1285.4190 source contributions the the reason why
01282.960, 1289.9800 I did those contributions is to learn
01285.419, 1292.7690 and also to get some recognition or two
01289.980, 1297.7490 it's it's a way to build up your resume
01292.769, 1299.5190 when you don't have specific expertise
01297.749, 1304.2590 in the area that you want to work in
01299.519, 1306.8090 probably so yeah it's a there's a lot of
01304.259, 1308.4800 paid open-source development but I
01306.809, 1310.7400 haven't been a button that it's been
01308.480, 1314.1900 everything is being voluntary for me
01310.740, 1315.9600 cool awesome listener question some of
01314.190, 1321.1790 which you've seen because you're in our
01315.960, 1324.2400 slack Channel let's see how about secret
01321.179, 1327.2990 is out many people are in our slack
01324.240, 1328.7990 Channel and if you want to be in our
01327.299, 1331.8600 slack channel in your listener all you
01328.799, 1335.3090 have to do is contribute a buck or two
01331.860, 1338.0900 on patreon and then you get the link in
01335.309, 1338.0900 then you can say hello
01338.240, 1344.5490 okay so Nick Nick asked Nick the
01341.340, 1346.6190 exploding lemur asked if you have any
01344.549, 1349.3790 tips for hunting down processors with
01346.619, 1351.6290 stable graphics drivers and/or easily
01349.379, 1358.0700 acquired graphics engine specs and open
01351.629, 1362.7300 drivers so the state of GPU drivers is
01358.070, 1365.0700 very bad the only ones I know of that
01362.730, 1367.4090 open source and quite good actually at
01365.070, 1370.4700 the Raspberry Pi one which is I think a
01367.409, 1373.2000 work in progress and then on desktop you
01370.470, 1376.4290 have the Intel works besides that
01373.200, 1381.1490 everything is be behind three layers of
01376.429, 1383.7000 DRAM and NDA's and Chris knows about
01381.149, 1385.6190 this you talk to one vendor and they
01383.700, 1390.5000 talk to the other vendor and you finally
01385.619, 1393.7690 get to the one that sells the GPU IP and
01390.500, 1395.7000 nobody gives you any internal details
01393.769, 1397.8600 unless
01395.700, 1400.2600 probably talking from VP to VP level
01397.860, 1402.6590 it's very complicated of course they're
01400.260, 1404.1590 doing super-secret stuff so I can
01402.659, 1406.3700 understand I'm not sure no it's all the
01404.159, 1406.3700 same
01407.809, 1412.7990 what about below that I mean that's
01410.039, 1414.7500 that's GPU stuff but in the
01412.799, 1418.1690 microcontroller world there's not a lot
01414.750, 1420.1490 of for hobbyists or people you know
01418.169, 1423.5100 doing like thinking about a Kickstarter
01420.149, 1427.2890 project there's not a lot of devices
01423.510, 1431.4600 that help out much with graphics no kind
01427.289, 1435.0000 of a 2d space yeah I've seen a couple of
01431.460, 1438.0590 SD chips that have a 2d accelerator
01435.000, 1442.2600 which is essentially a DMA engine that
01438.059, 1443.8500 can do like to the transfers where you
01442.260, 1446.5190 can specify an area and copy it to
01443.850, 1448.9190 another area and a bit more about them
01446.519, 1452.2200 that is an engine that can do scaling
01448.919, 1455.2790 and maybe rotation in 2d but that's
01452.220, 1458.0100 pretty much it if the other issue with
01455.279, 1461.3400 this kind of implementations is that
01458.010, 1463.5000 they're very a doc so each manufacturer
01461.340, 1468.1790 does their own thing and there's
01463.500, 1470.4600 absolutely no standards and maybe many
01468.179, 1473.5800 of those implementations are not very
01470.460, 1477.5700 distributed so expect plenty of bugs if
01473.580, 1480.3890 you're doing that and it's a huge
01477.570, 1485.7200 security risk in a way because you're
01480.389, 1489.4190 moving data around behind the CPU
01485.720, 1493.5000 protection mechanisms so you can easily
01489.419, 1497.2790 shoot yourself in the foot when you talk
01493.500, 1499.4400 about moving data into frame buffers and
01497.279, 1502.7990 being able to scale it some of that has
01499.440, 1505.6100 to do with fonts and having a font in
01502.799, 1509.7300 flash and then moving it to the screen
01505.610, 1511.5590 or having a letter in flash and moving
01509.730, 1517.4400 it to the screen because the font is a
01511.559, 1518.8200 series of letters how do you how do you
01517.440, 1521.4600 deal with fonts do you have a favorite
01518.820, 1523.7100 font do you prefer to do vectors and and
01521.460, 1526.1390 take the computing overhead do you
01523.710, 1529.2900 usually use bitmap fonts what do you
01526.139, 1533.4600 want to do so
01529.290, 1537.6900 yeah vector phones are ideal they
01533.460, 1541.9200 usually cost you just a little bit above
01537.690, 1544.6200 what you can spend on systems mostly
01541.920, 1547.7900 because they hover around a hundred K
01544.620, 1550.5000 and I have the case probably just
01547.790, 1554.1800 outside of your budget in many embedded
01550.500, 1557.7600 systems it's basically a compression
01554.180, 1559.9200 mechanism right you have the vectors in
01557.760, 1562.8300 a in a file and when you want to render
01559.920, 1565.9500 something you tessellate these vectors
01562.830, 1569.7900 into a bitmap and gosh that probably
01565.950, 1572.7500 somewhere and use that so if you are
01569.790, 1576.0300 using bitmap fonts what you're doing is
01572.750, 1578.5800 most of the same process butterfly yeah
01576.030, 1581.9100 you start from a font and you render the
01578.580, 1584.1900 bitmaps and you store only the bitmap on
01581.910, 1586.9500 your flash memory the issue with that is
01584.190, 1591.7500 that you cannot really change your text
01586.950, 1593.7300 size and you need to have space to store
01591.750, 1596.2500 all of the glyphs that you want to
01593.730, 1598.8800 render which if you're supporting things
01596.250, 1605.1000 like Chinese for example it's not a
01598.880, 1607.5300 trivial amount of space I think most of
01605.100, 1610.5000 the cortex-m processors can render
01607.530, 1616.2000 TrueType fonts correctly if you have the
01610.500, 1618.3300 run so if you have above I say 256 K of
01616.200, 1622.2900 nori you should probably give two type
01618.330, 1623.1000 fonts ago there is it's work with very
01622.290, 1624.6000 easy to work with
01623.100, 1628.2600 see how he's heard if they were really
01624.600, 1631.0500 hard kind of avoided them you need a
01628.260, 1634.5300 library yeah you you've got to
01631.050, 1636.3800 open-source libraries free type and STP
01634.530, 1642.1500 to type which is actually one of those
01636.380, 1644.6700 single feather priests like so much so
01642.150, 1647.5200 you just use that and it gives you
01644.670, 1651.2400 whatever you want okay good question
01647.520, 1652.8900 from Ben which was initially phrased why
01651.240, 1655.0800 do the displays that the gas-station
01652.890, 1658.7100 take five years to update for every key
01655.080, 1660.2600 press and then was changed to what are
01658.710, 1661.9700 some common mistakes made during
01660.260, 1668.9500 embedded graphics
01661.970, 1674.6600 I mean that 35 or 40 more minutes
01668.950, 1677.9200 mqtt tears right last time the I think
01674.660, 1680.5700 the thing that people don't understand
01677.920, 1683.6600 the the most common misunderstanding
01680.570, 1688.9400 about graphics is that graphics is a
01683.660, 1691.1000 bandwidth about operation right you you
01688.940, 1693.4400 do have some CPU processing and GPU
01691.100, 1695.9000 processing but the first limit that
01693.440, 1698.8700 you're going to hit is going to be the
01695.900, 1703.1900 bandwidth limit because it's mostly
01698.870, 1705.7700 about transferring information so in the
01703.190, 1709.1000 case of very slow displacing gas
01705.770, 1711.6200 stations or ATMs or whatever what
01709.100, 1715.1000 usually happens is that they choose a
01711.620, 1717.7600 processor for price reasons or business
01715.100, 1720.1100 reasons or whatever and then they make a
01717.760, 1722.3000 totally separate decision about the
01720.110, 1725.8400 resolution based on what this place they
01722.300, 1727.7900 can get or what resolution but visual
01725.840, 1730.0700 impact they want to have on the user and
01727.790, 1731.7500 then those things are completely
01730.070, 1734.2400 separate and they usually don't match up
01731.750, 1737.9000 and then that's why you end up with
01734.240, 1740.7200 those ugly low frame rates that you
01737.900, 1743.0300 could you say this is one of the reasons
01740.720, 1746.1200 that we do when we talk about DMA when
01743.030, 1748.1000 we talk about graphics because it is all
01746.120, 1751.5500 about moving things from here to there
01748.100, 1754.6300 as fast as possible and still being able
01751.550, 1758.8000 to do other stuff yep
01754.630, 1758.8000 are there other common mistakes
01760.070, 1764.2500 the other common mistake which is
01762.240, 1767.0400 related to probably one of the other
01764.250, 1769.9200 questions that I saw on the slab channel
01767.040, 1772.5200 is across products
01769.920, 1776.5800 the resolution is evaluated as a new
01772.520, 1778.4400 thing all the time so you change
01776.580, 1780.5700 products and you change completely the
01778.440, 1783.4500 resolution because again business
01780.570, 1786.3000 reasons or reliability or whatever and
01783.450, 1789.0300 then you start on your second product
01786.300, 1792.3600 you start maintaining two sets of assets
01789.030, 1796.2800 which don't really mesh with each other
01792.360, 1799.5300 and on the server iteration you start
01796.280, 1804.6600 handling three types of aspect ratios
01799.530, 1809.4600 and it all gets complicated so one if I
01804.660, 1812.2500 could make a choice across an entire set
01809.460, 1814.3800 of products I'd say stick to the same
01812.250, 1817.8900 resolution or at least stick to the same
01814.380, 1819.9900 aspect ratio that's a hard problem even
01817.890, 1822.0900 when you're not doing you know a small
01819.990, 1825.2700 embedded system that's even if you're
01822.090, 1826.8000 doing something with Linux or Apple's
01825.270, 1827.9100 had this problem right oh we came out
01826.800, 1829.8300 with a new phone and now all the
01827.910, 1831.7200 developers have to go and regenerate
01829.830, 1833.1300 everything and there's no good way to
01831.720, 1834.6900 make this automatable because things
01833.130, 1836.2800 don't look good when they're scaled or
01834.690, 1839.3400 when they're automatically laid out so
01836.280, 1841.1400 yeah it's a big problem every time when
01839.340, 1842.9100 you look at movies I mean you have
01841.140, 1844.5000 different scaling on whether whether
01842.910, 1846.9000 you're watching it on TV with the black
01844.500, 1848.4300 bars or whether you're in the movie
01846.900, 1850.0500 theater or whether you're watching an
01848.430, 1853.0700 old movie or a new movie the aspect
01850.050, 1856.5200 ratio and resolution that's just a
01853.070, 1861.2700 never-ending problem yep
01856.520, 1866.8500 and trying to decouple it in your code
01861.270, 1869.4300 is a great idea but as Chris said you it
01866.850, 1872.8800 looks different so you can't just say oh
01869.430, 1876.5400 we're gonna pound F that out it's not it
01872.880, 1878.4600 doesn't work like that yeah so there's a
01876.540, 1882.3000 few techniques that came mostly from
01878.460, 1885.0900 their web development work because web
01882.300, 1887.6700 the web pages are subject to a bunch of
01885.090, 1889.8000 resolutions and they need to look from
01887.670, 1892.5600 this basically what's the same set of
01889.800, 1893.0400 assets and code they need to look the
01892.560, 1895.4100 same
01893.040, 1897.9000 roughly the same so there are techniques
01895.410, 1900.6000 to minimize that but they cost in terms
01897.900, 1902.8800 of treatment development and CPU
01900.600, 1905.9700 processing power so they're not always
01902.880, 1908.0700 feasible on about systems well it's gone
01905.970, 1910.2000 and talked about mqtt because there were
01908.070, 1913.1300 some questions about that and I heard
01910.200, 1916.8300 you have been doing some home automation
01913.130, 1918.9300 yes though I must warn you that mqtt is
01916.830, 1921.5100 so great that I'm willfully ignorant of
01918.930, 1925.7100 all its internal implementation details
01921.510, 1929.8700 I enjoy it as an end user mostly what is
01925.710, 1933.6000 it it's a communications protocol
01929.870, 1939.2300 typically associated to IOT devices
01933.600, 1945.8100 it runs on tcp/ip and it follows
01939.230, 1947.7900 publication subscription principles ok
01945.810, 1950.3100 so you've already said tcp/ip and I'm
01947.790, 1952.3800 like oh I'll just take out all my micros
01950.310, 1954.4500 because that's that's heavy weight to
01952.380, 1955.8900 start with and then this is on top of it
01954.450, 1959.1000 it's the Internet of Things if you don't
01955.890, 1962.0100 have PCP IP you're just a thing I'm okay
01959.100, 1963.7800 with that that's a there's a there's a
01962.010, 1966.3200 variant that I'm not really familiar
01963.780, 1970.8900 with that doesn't run on top of tcp/ip
01966.320, 1974.7600 but I mean we're talking something that
01970.890, 1980.4000 can do at least Wi-Fi or Ethernet and
01974.760, 1982.9200 cover tcp/ip stack okay so it's it's on
01980.400, 1985.8300 top of tcp/ip
01982.920, 1989.8100 so guarantee transmissions as long as
01985.830, 1994.5200 you have the path between them and
01989.810, 1998.4900 publish/subscribe so your widget your
01994.520, 2000.7700 IOT thing probably publishes the data
01998.490, 2003.5900 and then some server like things
02000.770, 2008.3300 subscribes how does how does it work
02003.590, 2010.7900 so there's you need to have one broker I
02008.330, 2013.2500 use mosquito there's a bunch of them
02010.790, 2017.2400 which is like the half the central point
02013.250, 2019.4900 of the MQTT network and everything else
02017.240, 2023.6500 is a client and each client can
02019.490, 2026.4800 subscribe or publish information the
02023.650, 2028.9900 processes you
02026.480, 2031.8800 something with a topic and a payload and
02028.990, 2034.0400 the other clients can subscribe to a
02031.880, 2037.1200 topic and when you publish to that topic
02034.040, 2041.8400 take at the payload that you transmit it
02037.120, 2045.4700 it's here to stores IOT devices so the
02041.840, 2049.1000 whole my device went offline expecting
02045.470, 2050.8690 you have messages for availability so
02049.100, 2053.0900 whenever you come online you say I'm
02050.869, 2055.3990 available and whenever the broker sees
02053.090, 2058.1590 that you've gone offline because you
02055.399, 2063.1690 don't respond it's automatically a
02058.159, 2065.7800 message saying this device is offline it
02063.169, 2068.6000 also retains miss the broker can retain
02065.780, 2071.8400 messages so for example if you want to
02068.600, 2075.5000 talk to a thermostat and have a
02071.840, 2078.9800 temperature setting you publish I don't
02075.500, 2079.8790 know ABF I want to set into the ADF and
02078.980, 2082.1900 retain that
02079.879, 2084.6190 so whenever the thermostat comes back
02082.190, 2088.0700 online the broker communicates that
02084.619, 2091.6390 information automatically and the other
02088.070, 2095.4800 piece of technology that it has is a QoS
02091.639, 2097.7000 setting a quality of service which says
02095.480, 2099.6800 if you want the message to be
02097.700, 2101.6000 transferred once or if you really want
02099.680, 2106.6700 to make sure that the message is
02101.600, 2109.4600 received by our clients okay so mosquito
02106.670, 2112.0700 is the broker and it is sort of the hub
02109.460, 2113.7500 yes what do you run that on do you have
02112.070, 2115.4000 like a home server or are you running
02113.750, 2119.8590 that annika Raspberry Pi sort of thing
02115.400, 2123.5500 so at home I have a has a ou
02119.859, 2126.6400 distribution which is a home assistant
02123.550, 2132.9200 Bistro that runs with the Raspberry Pi
02126.640, 2135.1400 it's center around containers and on one
02132.920, 2137.4500 of the containers you run mosquito and
02135.140, 2139.1600 everything talks to that and home
02137.450, 2140.3900 assistant talks to that as well so
02139.160, 2144.1090 everything connects through the
02140.390, 2148.4500 Raspberry Pi what do you have for the
02144.109, 2154.0400 devices Oh devices it's mostly
02148.450, 2157.2200 esp8266 no that's you for the doors and
02154.040, 2158.3600 lights that kind of thing did you say
02157.220, 2160.8800 node
02158.360, 2171.4700 nah yeah it's called now them Co so I
02160.880, 2173.9300 click like Inc like it now you know it's
02171.470, 2175.9700 called no then see you and it out of the
02173.930, 2180.6500 box it grants Louis oh nothing make
02175.970, 2182.1500 sense okay what are you building with
02180.650, 2183.5300 this we knew and when I first heard of
02182.150, 2186.4900 this you were gonna do like one little
02183.530, 2190.8100 thing yeah I had a greenhouse
02186.490, 2198.4100 temperature control now I have two doors
02190.810, 2201.2600 lights the home alarm and the heating
02198.410, 2202.8500 system of the house connected there it's
02201.260, 2204.7400 pretty neat because you program
02202.850, 2207.2600 everything in micro Python or if you
02204.740, 2211.0700 doing something a bit more intensive you
02207.260, 2214.2800 use platform i/o we know framework and
02211.070, 2218.0600 it's just plug and play mostly it's very
02214.280, 2220.4300 satisfying way of working I don't even
02218.060, 2220.8800 know how you install the tool change for
02220.430, 2222.9800 this
02220.880, 2225.2000 everything is click click click click
02222.980, 2228.5300 here and everything works perfectly
02225.200, 2231.1100 it's amazing what about power I mean if
02228.530, 2234.1400 you're alarming if you're alarming doors
02231.110, 2236.9000 if you have door alarms don't those just
02234.140, 2241.2500 run on batteries and the esps are ok but
02236.900, 2244.5800 they're not like long-term batteries the
02241.250, 2247.7900 USB for the alarm is connected to the
02244.580, 2250.3700 alarm battery which is like a huge brick
02247.790, 2252.8300 that can last a few days
02250.370, 2255.1700 yeah that's no issue and also being
02252.830, 2256.8000 worrying about battery life for 4 years
02255.170, 2260.9500 old I don't care anymore
02256.800, 2263.3300 [Laughter]
02260.950, 2264.5900 MQTT comes in flavors do you have to
02263.330, 2268.6100 worry about any of that or does it all
02264.590, 2271.7500 just kind of poof works it magically
02268.610, 2274.9400 works yeah I I don't think there's
02271.750, 2277.2500 versioning at least
02274.940, 2280.6100 so since I'm building everything
02277.250, 2282.1700 basically from the say saying source
02280.610, 2284.7500 code everything works
02282.170, 2286.9700 I know if I bring a binary from
02284.750, 2288.8000 somewhere else into my home automation
02286.970, 2291.7100 which doesn't seem like a the best idea
02288.800, 2292.2200 in the world probably won't work
02291.710, 2295.3690 I don't
02292.220, 2299.3590 how it manages versioning you make this
02295.369, 2305.2400 sound very easy it's surprisingly easy
02299.359, 2308.4200 yeah on Python you just create a client
02305.240, 2310.0700 and issue MQTT that subscribe to
02308.420, 2312.2600 subtopic and you start getting call
02310.070, 2314.6300 backs for that that's what you have to
02312.260, 2316.9100 do it's three lines it's funny as you
02314.630, 2318.8900 talk about the architecture of it with
02316.910, 2321.2000 the publish and subscribe and the broker
02318.890, 2324.8000 and it sounds very much like robot
02321.200, 2327.0800 operating system okay but going on going
02324.800, 2331.6700 on to the next subject of my long list
02327.080, 2332.8590 of things to ask a Gabrielle about where
02331.670, 2336.0200 are you based
02332.859, 2340.5800 I'm in Argentina in a city called Mar
02336.020, 2345.8900 del Plata 400 kilometres south of Buenos
02340.580, 2349.0400 Aires on the coast and I have met you in
02345.890, 2350.4800 person near San Francisco how many hours
02349.040, 2353.6600 did you have to travel to get San
02350.480, 2357.0500 Francisco so there's no direct flights
02353.660, 2360.0500 to San Francisco from Argentina
02357.050, 2363.5600 and there's no definitely no direct
02360.050, 2367.4600 flights from foreign to anywhere from my
02363.560, 2371.1190 city so I had to take a bus to what
02367.460, 2373.9400 Osiris and then you typically go to LA
02371.119, 2375.5600 if you're lucky and then from there to
02373.940, 2379.8800 SF or San Diego
02375.560, 2382.5800 so it's about 20 hours 22 hours if
02379.880, 2386.7500 you're lucky I see you don't commute
02382.580, 2391.1900 regularly no my communities from my bed
02386.750, 2392.6600 to my desktop how do you how do you
02391.190, 2396.8800 handle that I have is working remotely
02392.660, 2401.8100 for you and and how do you make it work
02396.880, 2404.5400 and not distraction though I mean it's a
02401.810, 2408.8900 nice deal it's not easy to get started
02404.540, 2413.5890 doing this it it it has all the
02408.890, 2416.9900 challenges of working at home focus of
02413.589, 2419.6300 doing the things - especially working in
02416.990, 2421.3100 Hardware pinyon Argentina the hair needs
02419.630, 2425.7200 to be shape in its go through customs
02421.310, 2427.4900 that's a whole ordeal and
02425.720, 2431.3300 and the companies that you work with
02427.490, 2434.6800 need to be remote oriented in a way they
02431.330, 2438.2200 to be prepared to have remote workers
02434.680, 2442.0100 cut the philosophy required to do that
02438.220, 2444.5900 but that's probably not different from
02442.010, 2447.5900 the work that you do there right being
02444.590, 2450.3490 about hundred kilometres or a thousand
02447.590, 2452.6600 or ten thousand is the same in terms of
02450.349, 2455.1190 human interaction the things that get
02452.660, 2457.5500 more complicated is when you jump across
02455.119, 2460.3100 countries and you're doing horrible
02457.550, 2461.8400 projects I started doing software
02460.310, 2465.9800 projects basically web development
02461.840, 2469.6700 initially because it's much easier to
02465.980, 2475.3300 work like that against the server on the
02469.670, 2478.0990 Amazon Cloud Data Brazil buddy Seattle
02475.330, 2480.5600 that if if you depend on hard work that
02478.099, 2484.7000 maybe breaks and you need to wait a week
02480.560, 2486.3400 or two to get a replacement work do you
02484.700, 2490.3690 have any advice for people who want to
02486.340, 2491.6900 work remotely in general and then do you
02490.369, 2493.4600 have any advice review who went to work
02491.690, 2498.8000 remotely internationally like you're
02493.460, 2500.6600 doing I think the the first thing if you
02498.800, 2504.1700 want to work for example from Argentina
02500.660, 2506.7200 for US companies it's just get started
02504.170, 2509.5700 just make an account on freelance or
02506.720, 2513.5890 Elance or oDesk or whatever it's called
02509.570, 2515.7800 now and just get cheeks doing PHP or
02513.589, 2520.1600 JavaScript work and it's going to pay
02515.780, 2524.4700 very loudly just do that for some time
02520.160, 2527.0000 to get used to working remotely the
02524.470, 2528.6500 you're not going to get the most amazing
02527.000, 2532.0990 jobs doing that but you're going to
02528.650, 2534.9700 create a resume and and work that you
02532.099, 2539.0890 can point to maybe more interesting
02534.970, 2541.6700 employers saying to them basically I'm
02539.089, 2545.4800 responsible I can manage my own time and
02541.670, 2547.9700 I can get things done and then after
02545.480, 2551.7200 that is the same as for any work you
02547.970, 2554.8390 need to establish relationships with
02551.720, 2558.1090 people and people need to know you know
02554.839, 2559.6090 what you can do and if you cannot get
02558.109, 2561.7990 into an area that you
02559.609, 2565.9690 then look for open-source projects that
02561.799, 2568.1300 you can contribute to as a way to prove
02565.969, 2569.5390 that you can get the work done there any
02568.130, 2571.8800 other pitfalls that you've come across
02569.539, 2573.8290 just in terms of mechanics of things
02571.880, 2575.9000 like shipping I know that sometimes
02573.829, 2578.2990 shipping Hardware can be a pain because
02575.900, 2582.4690 it gets either confiscated or stuck in
02578.299, 2584.1190 customs are there ways to to suggest to
02582.469, 2586.4590 the companies you work for to smooth
02584.119, 2588.5590 those things over or is that just kind
02586.459, 2593.6900 of constituting business yeah in
02588.559, 2597.7990 Argentina in particular FedEx is the can
02593.690, 2600.0790 we advertise companies yeah FedEx please
02597.799, 2603.8900 send us a check yeah exactly let's let
02600.079, 2605.9300 give us a couple of three shipments it's
02603.890, 2609.2000 the best way to send things they
02605.930, 2611.3290 typically take a week to get stuff here
02609.200, 2613.9000 and it usually doesn't get bothered by
02611.329, 2620.9000 customs if you stay within the courier
02613.900, 2624.2590 weight and price limits and then if you
02620.900, 2626.4490 go beyond that then you start getting
02624.259, 2629.9000 issues right but that's that's like a
02626.449, 2633.4990 logistics problem that it's it's not
02629.900, 2640.5190 really in your hands to to solve to do
02633.499, 2642.1990 anything about I say that the most
02640.519, 2645.5590 difficult thing working probably
02642.199, 2647.9300 probably for you is the same is getting
02645.559, 2650.3590 people to acknowledge you and keep you
02647.930, 2652.1600 in the loop on things that's the when
02650.359, 2654.2890 you're not physically present talking
02652.160, 2656.5990 face to face to people the relationship
02654.289, 2660.2590 changes especially when there's a time
02656.599, 2662.6900 zone change yeah so if you can visit in
02660.259, 2666.3800 person every now and then that smooth
02662.690, 2668.8290 things watched you and I found that
02666.380, 2674.6600 working remotely has helped with some
02668.829, 2677.5090 jobs my lab is pretty good compared to
02674.660, 2680.1190 many of the startups I work with my
02677.509, 2684.9790 office is extraordinarily quiet compared
02680.119, 2686.9200 to many of the offices I visit and when
02684.979, 2690.1990 I work remotely we get better at
02686.920, 2692.8390 documentation part of that's just cuz I
02690.199, 2693.2300 document things and I like to and I
02692.839, 2694.8800 liked
02693.230, 2696.5300 have them documented because I like to
02694.880, 2700.5200 forget things very quickly and the
02696.530, 2702.8300 documents help me but also the documents
02700.520, 2706.7000 help them whether they realize that or
02702.830, 2708.7400 not I realize it when somebody emails me
02706.700, 2710.3900 from a client I worked on two years ago
02708.740, 2711.8590 and says I thought this would be
02710.390, 2714.2600 impossible and then I Richard document
02711.859, 2717.5000 realized I only had to uncomment like
02714.260, 2719.5700 one line and it was all good and I mean
02717.500, 2723.5500 that sort of thing is awesome also you
02719.570, 2732.4700 cannot not if you're working on office
02723.550, 2734.7800 is not true yeah
02732.470, 2736.4600 so if you're not feeling well if you
02734.780, 2740.0300 feel like you're blocked by a problem
02736.460, 2744.0500 exists you're to just get up and take a
02740.030, 2745.9700 walk or whatever in your head and come
02744.050, 2749.3590 back concentrate on on the problem
02745.970, 2752.7200 really think it through the speciality
02749.359, 2756.5500 OpenOffice plants that have become
02752.720, 2760.1900 typically in the US are very distracting
02756.550, 2762.1090 it's at least for me personally mostly
02760.190, 2768.9100 because I'm not used to them it cuts by
02762.109, 2771.6500 productivity a lot I totally agree and
02768.910, 2775.6400 working as a consultant being able to
02771.650, 2778.9700 clock out and go for a walk it's just so
02775.640, 2780.8300 valuable yeah because it also benefits
02778.970, 2783.7700 the company because your brain really
02780.830, 2786.7100 doesn't stop processing the what you're
02783.770, 2789.8590 doing but you can really build for
02786.710, 2794.7800 taking a walk at least I don't may be
02789.859, 2797.3000 shocked but when you're doing that
02794.780, 2800.0600 you're really thinking the problem that
02797.300, 2803.2600 you're facing the background yes very
02800.060, 2805.6600 much yes yes going back to graphics
02803.260, 2807.9500 Chris you had another couple questions
02805.660, 2809.8100 there was one in the list here that I
02807.950, 2812.2400 thought I think we skipped over that was
02809.810, 2814.2800 kind of the crux of the difficulty of
02812.240, 2816.1400 graphics on embedded systems and that's
02814.280, 2819.9200 if you're doing something moderately
02816.140, 2823.4100 complicated the dance between updating
02819.920, 2827.5000 the frame buffer syncing
02823.410, 2829.0300 updating the screen I just like to talk
02827.500, 2830.8300 about that a little bit to give people a
02829.030, 2832.4200 sense for okay if you really want to do
02830.830, 2834.3100 something that maybe has animation
02832.420, 2836.0800 that's fluid and doesn't have tearing
02834.310, 2839.6800 heart effects how you go about
02836.080, 2841.3300 architecting your system first you have
02839.680, 2844.3000 to describe what tearing me Oh
02841.330, 2845.9500 tearing would be so if you if you're
02844.300, 2848.5600 updating your frame buffer out of sync
02845.950, 2851.5600 with how the display is perhaps reading
02848.560, 2853.1800 it out you might have half of your
02851.560, 2855.3400 screen updated in the frame buffer and
02853.180, 2856.5700 half old data and then the display might
02855.340, 2859.6300 read it out and put it on the display
02856.570, 2862.3600 and then you tap this half updated
02859.630, 2864.0700 screen which since oftentimes you're
02862.360, 2866.8300 moving something it would look like
02864.070, 2870.3700 you've got a big tear mark aligned
02866.830, 2873.0400 across the screen so how do you solve
02870.370, 2875.2900 that right it's a I don't know if we
02873.040, 2877.8100 can't reveal this grease but it's a an
02875.290, 2880.1800 ancient secret passed from generation to
02877.810, 2883.6900 generation of super engineers and it's
02880.180, 2885.1000 called double buffering yes sorry I I
02883.690, 2887.8900 gave it out I'm sorry
02885.100, 2892.5400 I'm going to return my trimmer engineer
02887.890, 2894.7600 patch so what you do typically is you
02892.540, 2896.7700 have instead of only one frame buffer if
02894.760, 2898.8700 you can afford it you have two three
02896.770, 2902.1400 buffers of the displayed resolution and
02898.870, 2904.4200 while you're building your frame with
02902.140, 2906.5800 the CPU or the GPU on one you are
02904.420, 2910.3000 displaying the another one on the screen
02906.580, 2912.3400 and to switch between the frame buffers
02910.300, 2915.7900 what you do is you wait for a signal
02912.340, 2919.0300 from the display which is most likely
02915.790, 2920.9800 the missing signal which indicates that
02919.030, 2924.0100 the display has started scanning the
02920.980, 2926.5300 frame buffer so once it started scanning
02924.010, 2928.8300 the frame buffer it will read from the
02926.530, 2932.9200 active frame buffer all the pixels and
02928.830, 2935.1400 the pixels that it has read it will no
02932.920, 2938.4700 longer be they will no longer be in use
02935.140, 2942.3700 so that's the moment where when you can
02938.470, 2945.6400 switch frame buffers and the active one
02942.370, 2947.3800 becomes the back in the back buffer and
02945.640, 2949.1200 you can start drawing your new frame
02947.380, 2951.4900 there when the display that's seeing
02949.120, 2955.3000 with the front buffer and so this is a
02951.490, 2959.8600 ping pong buffer system where
02955.300, 2962.5900 when ping is activated is in use by the
02959.860, 2965.5600 LCD you write to the pong buffer and
02962.590, 2967.6000 then you wait for the signal to say to
02965.560, 2968.9800 swap and then the pong buffer is being
02967.600, 2972.1300 used by the LCD and you write to the
02968.980, 2974.4900 ping buffer yes and if you've got to
02972.130, 2977.2300 just play with an embedded frame buffer
02974.490, 2979.0000 usually they only have enough on there
02977.230, 2980.5000 for one frame right they don't have
02979.000, 2983.4600 double buffering so you might have to
02980.500, 2985.9000 add at least another buffer in your RAM
02983.460, 2987.8200 well how does that work sometimes you
02985.900, 2990.6400 can use you you can't always read out
02987.820, 2992.9200 the LCDs frame buffer that's usually
02990.640, 2994.8400 kind of exciting too
02992.920, 2997.5100 and so you have to keep a shadow of what
02994.840, 3000.2100 they write right it's usually very slow
02997.510, 3003.7500 to read the frame buffer in the display
03000.210, 3005.9700 itself so when the reason comes you send
03003.750, 3009.3300 the active frame buffer in a one-way
03005.970, 3010.7100 mode and start working with the
03009.330, 3013.9200 information that you had on that frame
03010.710, 3016.8300 buffer then there are tricks if your
03013.920, 3020.2200 performance is not enough hour you don't
03016.830, 3022.6500 have enough memory space for two frame
03020.220, 3024.8400 buffers you do like partial updates of
03022.650, 3028.1700 different buffers so you try to minimize
03024.840, 3031.9200 the amount of pixels that you change and
03028.170, 3034.6500 then maybe you can get it fast enough to
03031.920, 3036.6900 draw the frame rate that you want to
03034.650, 3039.7500 draw out maybe not 60 Hertz but maybe
03036.690, 3042.5700 thirty and without seeing the
03039.750, 3044.9700 disturbances of the screen do you have
03042.570, 3051.5400 any test methodologies when I had to do
03044.970, 3054.5100 LCD graphics system I found later that I
03051.540, 3058.3500 wished I had better unit tests to start
03054.510, 3061.5600 with involving lines and squares and do
03058.350, 3063.4500 you have a good way to figure out if you
03061.560, 3066.6500 have written your graphic system
03063.450, 3071.1300 correctly it's very hard to test I I
03066.650, 3075.5300 wish I had a solution for that usually
03071.130, 3079.9100 graphics have some form of user input
03075.530, 3085.1400 involvement so yeah there are dinner
03079.910, 3088.4400 thankfully import ways of testing things
03085.140, 3089.4000 but and I I couldn't of volunteer a
03088.440, 3091.4990 solution
03089.400, 3094.4890 now usually you accumulate a series of
03091.499, 3097.1690 visual tests and you can run through it
03094.489, 3099.8690 it's basically recordings of all of the
03097.169, 3101.8800 errors that you have had to deal with I
03099.869, 3104.4590 mean you start out with this is what I
03101.880, 3105.8390 think you know this test this
03104.459, 3108.4790 functionality and it looks good
03105.839, 3112.1690 but you forget some corner case or
03108.479, 3114.1500 usually it's an actual corner exactly so
03112.169, 3115.7390 you had update the test and so you end
03114.150, 3119.1600 up with a suite of things that you can
03115.739, 3121.6790 do but like Gabrielle said it's very
03119.160, 3124.1400 hard to automate that because it's a
03121.679, 3126.1190 visual thing so I mean you can kind of
03124.140, 3129.4790 take screenshots and compare them
03126.119, 3131.9990 against known good results but that's
03129.479, 3135.7190 all very painful yeah it's a tough
03131.999, 3139.4590 problem I remember writing the word red
03135.719, 3142.1400 and green and blue in each color and
03139.459, 3144.8090 then realizing I hadn't written them in
03142.140, 3148.6690 the correct colors because I wasn't sure
03144.809, 3151.7390 which was orangey and B on my display
03148.669, 3155.5190 but that's a classic problem mixing up
03151.739, 3157.2590 the components orders yeah yeah when you
03155.519, 3158.6400 have black and white which a lot of
03157.259, 3160.4090 times you start out with black and white
03158.640, 3163.4990 it doesn't matter but then when you
03160.409, 3165.7190 start doing animations for your team
03163.499, 3167.8800 suddenly it's important that red is red
03165.719, 3170.1590 and not green well here's a question for
03167.880, 3172.8290 you that the folks on the Select might
03170.159, 3174.8090 have asked but they didn't there's a lot
03172.829, 3177.4790 of different display technologies out
03174.809, 3179.4000 right now and if your decide if you're
03177.479, 3182.8190 building a hobby project or starting
03179.400, 3185.0090 some small product it might not be clear
03182.819, 3189.9290 what the best thing to choose is there's
03185.009, 3193.7390 there's OLED there's LCD there's other
03189.929, 3196.1400 things matrix lights are actually pretty
03193.739, 3200.4790 popular right now Inc and there's
03196.140, 3200.4790 there's drawbacks to all of these right
03201.079, 3207.2990 to list the tropics yeah yeah the
03204.419, 3210.2990 drawbacks of OLED because that may be
03207.299, 3213.6790 important to me soon oh that's a yeah
03210.299, 3215.2190 that's a pet peeve of mine so let's type
03213.679, 3218.1300 in time
03215.219, 3221.0690 they're like little gnomes that emit
03218.130, 3222.9800 light and they get older and older each
03221.069, 3226.2300 time you make them make
03222.980, 3227.8190 photos and the more you make them emit
03226.230, 3232.2900 photons the more they die the more
03227.819, 3234.3290 quickly they die so yeah that's a fun
03232.290, 3236.4900 fact that I wasn't aware of when I
03234.329, 3238.1700 started working with all it this place
03236.490, 3241.2300 and people I could choose them because
03238.170, 3243.4100 they're super bright and and you know
03241.230, 3246.3000 the monochrome ones look really really
03243.410, 3250.0690 engaging but really we're just killing
03246.300, 3254.2800 little-known murdering yes that's
03250.069, 3258.1500 scientifically proven - yeah in a
03254.280, 3263.9400 microscope just enable kamikaze mode and
03258.150, 3265.3490 you'll see they're very bright but the
03263.940, 3267.7800 nice thing about all that is you don't
03265.349, 3269.4000 draw a power your power draw is
03267.780, 3272.1300 proportional to how many pixels you're
03269.400, 3275.8690 actually lighting right yeah so each
03272.130, 3280.5000 each so each pixel is like an individual
03275.869, 3281.7900 light instead of being the LCD system
03280.500, 3284.8800 where you have a backlight and you're
03281.790, 3289.6190 basically filtering the backlight to
03284.880, 3291.3590 produce colors so the contrast is the
03289.619, 3293.4900 contrast appearance is much nicer
03291.359, 3296.4900 because the black is really black this
03293.490, 3300.4500 there's no light coming what the black
03296.490, 3305.1800 pixels and then color I've heard the
03300.450, 3310.2800 gnomes die at different rates yeah blue
03305.180, 3313.7400 dice especially fast not sure why
03310.280, 3317.4300 they're probably much larger because we
03313.740, 3320.9700 perceive blue with lower intensity so to
03317.430, 3323.7300 produce the same perceived blue-green
03320.970, 3327.5100 for example brightness the the blue one
03323.730, 3329.2200 needs to make much more effort my story
03327.510, 3330.5100 is that we haven't had blue LEDs for
03329.220, 3334.6090 that long so we're just not really good
03330.510, 3337.8000 at making them yeah that's true
03334.609, 3340.8800 or maybe the other pixels don't like
03337.800, 3345.6600 blue yeah those no hate theater no yeah
03340.880, 3349.4100 so yeah so so they give you these curves
03345.660, 3352.3190 and they say if your Sultanate's
03349.410, 3354.9300 this display can live for 100 hours and
03352.319, 3358.2000 then what you get is a
03354.930, 3361.2000 a pixel that doesn't isn't able to
03358.200, 3363.2000 emitter at its fullest and depending on
03361.200, 3367.1400 what you're showing screen you can get
03363.200, 3369.1800 burning a burning effect which is an
03367.140, 3371.2800 image that seems to be constantly there
03369.180, 3376.2300 and that's produced by the lack of the
03371.280, 3378.0890 pixels to do a bit light at the same
03376.230, 3380.8390 level that the neighboring pixels can
03378.089, 3385.4100 with it I mean that that wouldn't that
03380.839, 3390.7500 sounds fine not not really not at all
03385.410, 3392.6700 fine okay so so OLED is see if you
03390.750, 3394.8590 manage if you manage to get all the
03392.670, 3397.4700 knobs to die at the same rate that makes
03394.859, 3398.3690 fine because you won't notice it for for
03397.470, 3401.4900 very long time
03398.369, 3404.4900 the problem is when they start dying at
03401.490, 3410.4500 different rates for me a pattern then
03404.490, 3412.9700 you really notice them okay so LEDs
03410.450, 3417.0890 might be an option but those are very
03412.970, 3418.2300 power inefficient so I guess LCDs those
03417.089, 3423.1500 are fine they've been around for a long
03418.230, 3427.3190 time they must work right yeah ago the
03423.150, 3431.7900 problem is if you if you want to make a
03427.319, 3434.5490 really nice-looking device with no
03431.790, 3437.2200 borders around it it's very hard to do
03434.549, 3440.6090 with LCD because they require a plodding
03437.220, 3443.8190 area somewhere so you get that if you
03440.609, 3445.9500 look at wearable devices with LCDs you'd
03443.819, 3449.2800 see that some where they may be
03445.950, 3451.7100 advertised a ride over on a region
03449.280, 3454.2000 because they cannot avoid having that
03451.710, 3458.4600 section then it has the backlight issue
03454.200, 3461.0400 you have to there's all very few LCDs
03458.460, 3463.3490 that you can see that they have trans
03461.040, 3465.7500 reflective one switch light coming into
03463.349, 3467.6700 it is reflected off a substrate on the
03465.750, 3469.6800 back and then and then you can see it
03467.670, 3472.2600 daylight but usually you have to have
03469.680, 3475.0200 some sort of light emitting thing on the
03472.260, 3477.4800 back and that's usually some white LEDs
03475.020, 3480.7500 or some phosphorescent thing fluorescent
03477.480, 3485.6900 thing which draws a lot of power so I
03480.750, 3488.3390 should use ink you should use beeps
03485.690, 3489.7800 Morse code I do feel like we're gonna
03488.339, 3494.1300 get down to like you just shouldn't have
03489.780, 3496.4700 it display at all you can avoid it it's
03494.130, 3502.9800 a big part of the power budget if you
03496.470, 3504.6900 want the display just watch the TV all
03502.980, 3506.1300 right do we have more graphics questions
03504.690, 3507.2700 that was the main one I wanted to go
03506.130, 3509.9700 back to I don't think we missed an
03507.270, 3513.3290 analyst well I mean the list is just
03509.970, 3517.0490 there because I have to do something for
03513.329, 3518.8090 the show other than talk yeah well I
03517.049, 3525.3190 have lots of questions for Gabriel but
03518.809, 3528.6600 he's not going to answer them I think
03525.319, 3531.3900 I've already gone over the line with a
03528.660, 3535.1400 double buffer and the nobs thing I don't
03531.390, 3537.9900 think I should have revealed that okay I
03535.140, 3539.3390 have one more question for you that when
03537.990, 3543.1800 you were young when you were the age
03539.339, 3546.4800 that your sons are now yes what did you
03543.180, 3549.2990 want to be when you grow up yeah I
03546.480, 3553.2300 wanted to be an engineer really from
03549.299, 3555.2990 that young yes so before I wanted to be
03553.230, 3559.5790 in a chair I actually wanted to be a
03555.299, 3563.4300 garbage collection man also buy boxes
03559.579, 3566.9100 but right after that I wanted to be at
03563.430, 3570.6600 my my my stepdad was a garbage
03566.910, 3573.0590 collection person and I you know in high
03570.660, 3576.6500 school I was like oh god don't tell
03573.059, 3581.3690 anybody to say he drives trucks and I
03576.650, 3585.0590 found out a few years ago that I was the
03581.369, 3586.5300 coolest person in the neighborhood to
03585.059, 3589.0790 the five-year-old who lived across the
03586.530, 3591.2700 street when he found out that my stepdad
03589.079, 3593.7000 Drive garbage trucks he was just like
03591.270, 3597.3900 that was the coolest thing yeah I was
03593.700, 3599.2800 probably the same yeah but you but you
03597.390, 3601.1090 knew what an engineer was and you wanted
03599.280, 3605.2200 to build things at a young age did you
03601.109, 3607.0200 take things apart my Iancu was an
03605.220, 3609.7200 electronics is an electronics engineer
03607.020, 3612.4500 so I guess that's what I picked that up
03609.720, 3615.0490 from yeah I absolutely was hated by my
03612.450, 3619.0490 brothers I constantly took apart toys
03615.049, 3620.5200 and I never put them back together no
03619.049, 3623.4000 once you know how they work they don't
03620.520, 3625.2900 who cares yeah my mom says that I went
03623.400, 3632.1000 to the University so I could learn how
03625.290, 3634.3500 to put the toys well I think we've kept
03632.100, 3635.6100 you for long enough Gabrielle do you
03634.350, 3638.1600 have any thoughts you'd like to leave us
03635.610, 3641.7600 with yes I'd like to read you a quote
03638.160, 3643.9800 one of my favorite it says it's from
03641.760, 3645.6300 Douglas Adams from mostly harmless and
03643.980, 3647.2200 it says a common mistake that people
03645.630, 3649.5300 make when trying to design something
03647.220, 3655.5200 completely foolproof is to underestimate
03649.530, 3659.5500 the ingenuity of concrete faults yes a
03655.520, 3662.6100 lesson to live by yeah I guess it has
03659.550, 3664.6500 been Gabrielle Okubo software
03662.610, 3668.0400 electronics and systems engineer at
03664.650, 3670.1400 large you can contact him via Twitter
03668.040, 3671.7900 via his webpage which will of course be
03670.140, 3674.2800 in the show notes or you can email us
03671.790, 3675.8600 and we will forward it along thank you
03674.280, 3677.1600 so much for being with us Gabrielle
03675.860, 3680.9100 thank you
03677.160, 3682.4100 it's been very nice being here thank you
03680.910, 3684.3600 to Christopher for producing and
03682.410, 3685.0500 co-hosting and of course thank you for
03684.360, 3687.1800 listening
03685.050, 3689.4000 you can always contact us at show at
03687.180, 3691.5900 embedded FM or hit the contact link on
03689.400, 3695.8500 the embedded FM website where you can
03691.590, 3698.4000 also find at the blog and now a quote to
03695.850, 3702.3500 leave you with a from a jorge luis
03698.400, 3705.2100 borges plant your own gardens and
03702.350, 3708.7700 decorate your own soul instead of
03705.210, 3708.7700 waiting for someone to bring you flowers
03709.609, 3714.0000 embedded is an independently produced
03711.900, 3716.5200 radio show that focuses on the many
03714.000, 3718.3800 aspects of engineering it is a
03716.520, 3720.2900 production of logical elegance an
03718.380, 3723.0000 embedded software consulting company in
03720.290, 3725.2500 California if there are advertisements
03723.000, 3727.7700 in the show we did not put them there
03725.250, 3730.3500 and do not receive money from them at
03727.770, 3734.2200 this time our sponsors are logical
03730.350, 3736.2800 elegance and listeners like you
03734.220, 3736.2800 you
Attempting very simple open *FOR OUTPUT* of sys.argv[2]= werdz254.txt
